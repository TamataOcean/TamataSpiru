<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="d9/d5a/_cool_spark_fun_b_m_e280_8cpp" kind="file" language="C++">
    <compoundname>CoolSparkFunBME280.cpp</compoundname>
    <includes refid="d2/d3a/_cool_spark_fun_b_m_e280_8h" local="yes">CoolSparkFunBME280.h</includes>
    <includes local="yes">stdint.h</includes>
    <includes local="no">math.h</includes>
    <includes local="yes">Wire.h</includes>
    <includes local="yes">SPI.h</includes>
    <incdepgraph>
      <node id="233">
        <label>SPI.h</label>
      </node>
      <node id="230">
        <label>stdint.h</label>
      </node>
      <node id="228">
        <label>CoolSparkFunBME280.cpp</label>
        <link refid="d9/d5a/_cool_spark_fun_b_m_e280_8cpp"/>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
      </node>
      <node id="232">
        <label>Wire.h</label>
      </node>
      <node id="231">
        <label>math.h</label>
      </node>
      <node id="229">
        <label>CoolSparkFunBME280.h</label>
        <link refid="d2/d3a/_cool_spark_fun_b_m_e280_8h"/>
        <childnode refid="230" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">CoolSparkFunBME280.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Modified<sp/>by<sp/>Mehdi<sp/>Zemzem</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment">Originally<sp/>SparkFunBME280.h</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment">BME280<sp/>Arduino<sp/>and<sp/>Teensy<sp/>Driver</highlight></codeline>
<codeline lineno="9"><highlight class="comment">Marshall<sp/>Taylor<sp/>@<sp/>SparkFun<sp/>Electronics</highlight></codeline>
<codeline lineno="10"><highlight class="comment">May<sp/>20,<sp/>2015</highlight></codeline>
<codeline lineno="11"><highlight class="comment">https://github.com/sparkfun/BME280_Breakout</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment">Resources:</highlight></codeline>
<codeline lineno="14"><highlight class="comment">Uses<sp/>Wire.h<sp/>for<sp/>i2c<sp/>operation</highlight></codeline>
<codeline lineno="15"><highlight class="comment">Uses<sp/>SPI.h<sp/>for<sp/>SPI<sp/>operation</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment">Development<sp/>environment<sp/>specifics:</highlight></codeline>
<codeline lineno="18"><highlight class="comment">Arduino<sp/>IDE<sp/>1.6.4</highlight></codeline>
<codeline lineno="19"><highlight class="comment">Teensy<sp/>loader<sp/>1.23</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight></codeline>
<codeline lineno="21"><highlight class="comment">This<sp/>code<sp/>is<sp/>released<sp/>under<sp/>the<sp/>[MIT<sp/>License](http://opensource.org/licenses/MIT).</highlight></codeline>
<codeline lineno="22"><highlight class="comment">Please<sp/>review<sp/>the<sp/>LICENSE.md<sp/>file<sp/>included<sp/>with<sp/>this<sp/>example.<sp/>If<sp/>you<sp/>have<sp/>any<sp/>questions<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment">or<sp/>concerns<sp/>with<sp/>licensing,<sp/>please<sp/>contact<sp/>techsupport@sparkfun.com.</highlight></codeline>
<codeline lineno="24"><highlight class="comment">Distributed<sp/>as-is;<sp/>no<sp/>warranty<sp/>is<sp/>given.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//See<sp/>SparkFunBME280.h<sp/>for<sp/>additional<sp/>topology<sp/>notes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h" kindref="compound">CoolSparkFunBME280.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdint.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Wire.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SPI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//****************************************************************************//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Settings<sp/>and<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//****************************************************************************//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//Constructor<sp/>--<sp/>Specifies<sp/>default<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="df/dcf/class_b_m_e280_1a9b9354e010528a0c3d452aa2459b808c" refkind="member"><highlight class="normal"><ref refid="df/dcf/class_b_m_e280_1a9b9354e010528a0c3d452aa2459b808c" kindref="member">BME280::BME280</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Construct<sp/>with<sp/>these<sp/>default<sp/>settings<sp/>if<sp/>nothing<sp/>is<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Select<sp/>interface<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1a5bf116387c543a6ea5732976424e8cb1" kindref="member">commInterface</ref><sp/>=<sp/><ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a5cd01756030509b764d43a2b8c94fce8" kindref="member">I2C_MODE</ref>;<sp/></highlight><highlight class="comment">//Can<sp/>be<sp/>I2C_MODE,<sp/>SPI_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Select<sp/>address<sp/>for<sp/>I2C.<sp/><sp/>Does<sp/>nothing<sp/>for<sp/>SPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1af8103021dbce7e5ee6d786c4893324f7" kindref="member">I2CAddress</ref><sp/>=<sp/>0x77;<sp/></highlight><highlight class="comment">//Ignored<sp/>for<sp/>SPI_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Select<sp/>CS<sp/>pin<sp/>for<sp/>SPI.<sp/><sp/>Does<sp/>nothing<sp/>for<sp/>I2C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1abe2de606ebb580ad81e3fafb1a454580" kindref="member">chipSelectPin</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1a0ffbdf34f4c23a2a167f00e4cb971dec" kindref="member">runMode</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1abdedc9d05f4850c58005313486958073" kindref="member">tempOverSample</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1a85ba10cad25b479bba9cb42c6400ab21" kindref="member">pressOverSample</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1a4a02fc7708071b88ccf610e3f7ed9d55" kindref="member">humidOverSample</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//****************************************************************************//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Configuration<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>uses<sp/>the<sp/>stored<sp/>SensorSettings<sp/>to<sp/>start<sp/>the<sp/>IMU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Use<sp/>statements<sp/>such<sp/>as<sp/>&quot;mySensor.settings.commInterface<sp/>=<sp/>SPI_MODE;&quot;<sp/>to<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>configure<sp/>before<sp/>calling<sp/>.begin();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//****************************************************************************//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="df/dcf/class_b_m_e280_1a994c102f010547f9c740a338ef9905c7" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="df/dcf/class_b_m_e280_1a994c102f010547f9c740a338ef9905c7" kindref="member">BME280::begin</ref>()</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>the<sp/>settings<sp/>structure<sp/>values<sp/>to<sp/>determine<sp/>how<sp/>to<sp/>setup<sp/>the<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dataToWrite<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//Temporary<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1a5bf116387c543a6ea5732976424e8cb1" kindref="member">commInterface</ref>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a5cd01756030509b764d43a2b8c94fce8" kindref="member">I2C_MODE</ref>:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.begin(2,14);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1ab1dcc9464e3fcb94922386e8a7f53f21" kindref="member">SPI_MODE</ref>:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>the<sp/>SPI<sp/>library:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI.begin();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>ARDUINO_ARCH_ESP32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI.setFrequency(1000000);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>is<sp/>read<sp/>and<sp/>written<sp/>MSb<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI.setBitOrder(SPI_MSBFIRST);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Like<sp/>the<sp/>standard<sp/>arduino/teensy<sp/>comment<sp/>below,<sp/>mode0<sp/>seems<sp/>wrong<sp/>according<sp/>to<sp/>standards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>conforms<sp/>to<sp/>the<sp/>timing<sp/>diagrams<sp/>when<sp/>used<sp/>for<sp/>the<sp/>ESP32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI.setDataMode(SPI_MODE0);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>SPI<sp/>frequency<sp/>is<sp/>10MHz,<sp/>could<sp/>divide<sp/>by<sp/>2<sp/>here:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI.setClockDivider(SPI_CLOCK_DIV32);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>is<sp/>read<sp/>and<sp/>written<sp/>MSb<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI.setBitOrder(MSBFIRST);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>is<sp/>captured<sp/>on<sp/>rising<sp/>edge<sp/>of<sp/>clock<sp/>(CPHA<sp/>=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Base<sp/>value<sp/>of<sp/>the<sp/>clock<sp/>is<sp/>HIGH<sp/>(CPOL<sp/>=<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>was<sp/>SPI_MODE3<sp/>for<sp/>RedBoard,<sp/>but<sp/>I<sp/>had<sp/>to<sp/>change<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MODE0<sp/>for<sp/>Teensy<sp/>3.1<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI.setDataMode(SPI_MODE3);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initalize<sp/>the<sp/><sp/>data<sp/>ready<sp/>and<sp/>chip<sp/>select<sp/>pins:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1abe2de606ebb580ad81e3fafb1a454580" kindref="member">chipSelectPin</ref>,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1abe2de606ebb580ad81e3fafb1a454580" kindref="member">chipSelectPin</ref>,<sp/>HIGH);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Reading<sp/>all<sp/>compensation<sp/>data,<sp/>range<sp/>0x88:A1,<sp/>0xE1:E7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a044a8c40e958b1cda3fb85b95303550e" kindref="member">dig_T1</ref><sp/>=<sp/>((uint16_t)((<ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1ab41e00320fc3817544911020c4892ce9" kindref="member">BME280_DIG_T1_MSB_REG</ref>)<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/><ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a95bded41d4d21e0dc9d5e90cef46e2f0" kindref="member">BME280_DIG_T1_LSB_REG</ref>)));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a8f8bb62e10c9bc0decb4463128ccaee5" kindref="member">dig_T2</ref><sp/>=<sp/>((int16_t)((<ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a04dadb44784187c69a905720ce955e84" kindref="member">BME280_DIG_T2_MSB_REG</ref>)<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/><ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1aeb987cec0df70171e3f36e5d3b68f57b" kindref="member">BME280_DIG_T2_LSB_REG</ref>)));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a5b134db1776888487855c6b526d130d6" kindref="member">dig_T3</ref><sp/>=<sp/>((int16_t)((<ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a656d326254d65330c2bdf9482ca590fc" kindref="member">BME280_DIG_T3_MSB_REG</ref>)<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/><ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1aa900c543759fa27e583393ef8740c37a" kindref="member">BME280_DIG_T3_LSB_REG</ref>)));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1aba96e3c2bdbbe79c20a836d9c55c60cf" kindref="member">dig_P1</ref><sp/>=<sp/>((uint16_t)((<ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1ad521625b8228f27c5bd1408f11c82705" kindref="member">BME280_DIG_P1_MSB_REG</ref>)<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/><ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a4e93de21dbe08f37e606c40c9fc144d0" kindref="member">BME280_DIG_P1_LSB_REG</ref>)));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1ab8a514b812ec77913dc95147d66bbcc4" kindref="member">dig_P2</ref><sp/>=<sp/>((int16_t)((<ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1afa34e3a536046bc6156a1ed4bb507d95" kindref="member">BME280_DIG_P2_MSB_REG</ref>)<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/><ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a413900b0f4aa9c057203f6b198e78806" kindref="member">BME280_DIG_P2_LSB_REG</ref>)));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1ac333ef210929de18815cec04c68acec2" kindref="member">dig_P3</ref><sp/>=<sp/>((int16_t)((<ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a37526ca63d516cbca0117a54e9266190" kindref="member">BME280_DIG_P3_MSB_REG</ref>)<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/><ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1adcc5e52670f45b9f63a9135c5e1c5492" kindref="member">BME280_DIG_P3_LSB_REG</ref>)));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a8af2a8c6f19a2a56e784aa9a7bd49cd3" kindref="member">dig_P4</ref><sp/>=<sp/>((int16_t)((<ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a7df62b54283c277da20b12bb322870e0" kindref="member">BME280_DIG_P4_MSB_REG</ref>)<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/><ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a74ecf31c885677d4d6b8a3d8db22ee6d" kindref="member">BME280_DIG_P4_LSB_REG</ref>)));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1ae2508256bbfc0e222a677ebbd1d0acf7" kindref="member">dig_P5</ref><sp/>=<sp/>((int16_t)((<ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1ac038f66828c72b71559096efafa76970" kindref="member">BME280_DIG_P5_MSB_REG</ref>)<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/><ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a7054983fb5c397ec63838d2b6d047a12" kindref="member">BME280_DIG_P5_LSB_REG</ref>)));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1ad1a973f775ee6d7f23d9197824971c76" kindref="member">dig_P6</ref><sp/>=<sp/>((int16_t)((<ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1ac43647d729a7d57221ecb0cf139accb4" kindref="member">BME280_DIG_P6_MSB_REG</ref>)<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/><ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a7e12334e305f1665cbcaa02bdbb38909" kindref="member">BME280_DIG_P6_LSB_REG</ref>)));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1adda4a99343f9e02de7d9f2d5949477d2" kindref="member">dig_P7</ref><sp/>=<sp/>((int16_t)((<ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a7587b0d965b303fec2c2d4371add623f" kindref="member">BME280_DIG_P7_MSB_REG</ref>)<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/><ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a70f6683a4c3c0818405ca3880f28a109" kindref="member">BME280_DIG_P7_LSB_REG</ref>)));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a06372d2918206f0cd35954e5bb35a1d2" kindref="member">dig_P8</ref><sp/>=<sp/>((int16_t)((<ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a26633dd2c5b34de0d5163e11f9e3a22d" kindref="member">BME280_DIG_P8_MSB_REG</ref>)<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/><ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1afe625f2ec64c74d6488a93ba04575b24" kindref="member">BME280_DIG_P8_LSB_REG</ref>)));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a5e942a51a1b5d7753719db1e27e55c06" kindref="member">dig_P9</ref><sp/>=<sp/>((int16_t)((<ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a819382b7d14efff4294e19f9a72010b3" kindref="member">BME280_DIG_P9_MSB_REG</ref>)<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/><ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a24f19ebc8092ddede86f5533b9f09313" kindref="member">BME280_DIG_P9_LSB_REG</ref>)));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1ab8de0d58f5b0efa7ce638bed02deb460" kindref="member">dig_H1</ref><sp/>=<sp/>((uint8_t)(<ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1ad29dd403735dc3c3225c6838e5eed820" kindref="member">BME280_DIG_H1_REG</ref>)));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1afcfd149e907f83effaee0ae5dfa82a8f" kindref="member">dig_H2</ref><sp/>=<sp/>((int16_t)((<ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1aaf8b4172339b971f5a5b108c98d5d2fe" kindref="member">BME280_DIG_H2_MSB_REG</ref>)<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/><ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a260ba9aa4ae925ed4a76a2f45a62e1f2" kindref="member">BME280_DIG_H2_LSB_REG</ref>)));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a65b525f9a3c58baf03db61da4626f417" kindref="member">dig_H3</ref><sp/>=<sp/>((uint8_t)(<ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1adbb9946cb6a096b6ff1f0226c0e7a659" kindref="member">BME280_DIG_H3_REG</ref>)));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a6b540f7bc56275b482d65e0725aeb27b" kindref="member">dig_H4</ref><sp/>=<sp/>((int16_t)((<ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a8dc154fcd1e08088d289ce668c4d718a" kindref="member">BME280_DIG_H4_MSB_REG</ref>)<sp/>&lt;&lt;<sp/>4)<sp/>+<sp/>(<ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a722ff6a68e3db9eec127b191f2530a20" kindref="member">BME280_DIG_H4_LSB_REG</ref>)<sp/>&amp;<sp/>0x0F)));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a03691fc56b0bff17b007ffbd71dcc7b9" kindref="member">dig_H5</ref><sp/>=<sp/>((int16_t)((<ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1ae7e42b75f0268a4303b77699fb8be834" kindref="member">BME280_DIG_H5_MSB_REG</ref>)<sp/>&lt;&lt;<sp/>4)<sp/>+<sp/>((<ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a722ff6a68e3db9eec127b191f2530a20" kindref="member">BME280_DIG_H4_LSB_REG</ref>)<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0x0F)));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a2f8c842c4becfce11e04c00168a9be0f" kindref="member">dig_H6</ref><sp/>=<sp/>((uint8_t)<ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1aa53163d82db48577fdb9a83112226e2c" kindref="member">BME280_DIG_H6_REG</ref>));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>oversampling<sp/>control<sp/>words.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//config<sp/>will<sp/>only<sp/>be<sp/>writeable<sp/>in<sp/>sleep<sp/>mode,<sp/>so<sp/>first<sp/>insure<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1afcff21c342725246bf415d7f0e4d04f0" kindref="member">writeRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a34483b4a562393f91fe3f01d676abb88" kindref="member">BME280_CTRL_MEAS_REG</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>config<sp/>word</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>dataToWrite<sp/>=<sp/>(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1a7098be3c1df0271dc9bc0fb45c1e9bb9" kindref="member">tStandby</ref><sp/>&lt;&lt;<sp/>0x5)<sp/>&amp;<sp/>0xE0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>dataToWrite<sp/>|=<sp/>(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1a69dc95368069a0f408a141d4c2cbf045" kindref="member">filter</ref><sp/>&lt;&lt;<sp/>0x02)<sp/>&amp;<sp/>0x1C;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1afcff21c342725246bf415d7f0e4d04f0" kindref="member">writeRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a70c225069ef92e5da90ee45362f7ba69" kindref="member">BME280_CONFIG_REG</ref>,<sp/>dataToWrite);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>ctrl_hum<sp/>first,<sp/>then<sp/>ctrl_meas<sp/>to<sp/>activate<sp/>ctrl_hum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>dataToWrite<sp/>=<sp/><ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1a4a02fc7708071b88ccf610e3f7ed9d55" kindref="member">humidOverSample</ref><sp/>&amp;<sp/>0x07;<sp/></highlight><highlight class="comment">//all<sp/>other<sp/>bits<sp/>can<sp/>be<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1afcff21c342725246bf415d7f0e4d04f0" kindref="member">writeRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a6da31fc4446b80cf5a830a5df45a5743" kindref="member">BME280_CTRL_HUMIDITY_REG</ref>,<sp/>dataToWrite);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>ctrl_meas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//First,<sp/>set<sp/>temp<sp/>oversampling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>dataToWrite<sp/>=<sp/>(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1abdedc9d05f4850c58005313486958073" kindref="member">tempOverSample</ref><sp/>&lt;&lt;<sp/>0x5)<sp/>&amp;<sp/>0xE0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Next,<sp/>pressure<sp/>oversampling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>dataToWrite<sp/>|=<sp/>(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1a85ba10cad25b479bba9cb42c6400ab21" kindref="member">pressOverSample</ref><sp/>&lt;&lt;<sp/>0x02)<sp/>&amp;<sp/>0x1C;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Last,<sp/>set<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>dataToWrite<sp/>|=<sp/>(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1a0ffbdf34f4c23a2a167f00e4cb971dec" kindref="member">runMode</ref>)<sp/>&amp;<sp/>0x03;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Load<sp/>the<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1afcff21c342725246bf415d7f0e4d04f0" kindref="member">writeRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a34483b4a562393f91fe3f01d676abb88" kindref="member">BME280_CTRL_MEAS_REG</ref>,<sp/>dataToWrite);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">readRegister</ref>(0xD0);</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//Strictly<sp/>resets.<sp/><sp/>Run<sp/>.begin()<sp/>afterwards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="df/dcf/class_b_m_e280_1aeec5deb6daace6ae390108b4210e9df7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/dcf/class_b_m_e280_1aeec5deb6daace6ae390108b4210e9df7" kindref="member">BME280::reset</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1afcff21c342725246bf415d7f0e4d04f0" kindref="member">writeRegister</ref>(<ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a58ebcaa8ff137ca7e8704dbfb70dff57" kindref="member">BME280_RST_REG</ref>,<sp/>0xB6);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//****************************************************************************//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Pressure<sp/>Section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//****************************************************************************//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="df/dcf/class_b_m_e280_1ada6e799917afb4f228e6253bc56ffe75" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="df/dcf/class_b_m_e280_1ada6e799917afb4f228e6253bc56ffe75" kindref="member">BME280::readFloatPressure</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>pressure<sp/>in<sp/>Pa<sp/>as<sp/>unsigned<sp/>32<sp/>bit<sp/>integer<sp/>in<sp/>Q24.8<sp/>format<sp/>(24<sp/>integer<sp/>bits<sp/>and<sp/>8<sp/>fractional<sp/>bits).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>value<sp/>of<sp/>“24674867”<sp/>represents<sp/>24674867/256<sp/>=<sp/>96386.2<sp/>Pa<sp/>=<sp/>963.862<sp/>hPa</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>buffer[3];</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aecca87c2c40a7f2bcabcea921bdc6124" kindref="member">readRegisterRegion</ref>(buffer,<sp/><ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1ac60d376f920e64fe5855852658041c82" kindref="member">BME280_PRESSURE_MSB_REG</ref>,<sp/>3);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>adc_P<sp/>=<sp/>((uint32_t)buffer[0]<sp/>&lt;&lt;<sp/>12)<sp/>|<sp/>((uint32_t)buffer[1]<sp/>&lt;&lt;<sp/>4)<sp/>|<sp/>((buffer[2]<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0x0F);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>var1,<sp/>var2,<sp/>p_acc;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>((int64_t)<ref refid="df/dcf/class_b_m_e280_1ad20f44914b78395f4d4bc64f4a68b369" kindref="member">t_fine</ref>)<sp/>-<sp/>128000;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>var1<sp/>*<sp/>var1<sp/>*<sp/>(int64_t)<ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1ad1a973f775ee6d7f23d9197824971c76" kindref="member">dig_P6</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>var2<sp/>+<sp/>((var1<sp/>*<sp/>(int64_t)<ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1ae2508256bbfc0e222a677ebbd1d0acf7" kindref="member">dig_P5</ref>)&lt;&lt;17);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>var2<sp/>+<sp/>(((int64_t)<ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a8af2a8c6f19a2a56e784aa9a7bd49cd3" kindref="member">dig_P4</ref>)&lt;&lt;35);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>((var1<sp/>*<sp/>var1<sp/>*<sp/>(int64_t)<ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1ac333ef210929de18815cec04c68acec2" kindref="member">dig_P3</ref>)&gt;&gt;8)<sp/>+<sp/>((var1<sp/>*<sp/>(int64_t)<ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1ab8a514b812ec77913dc95147d66bbcc4" kindref="member">dig_P2</ref>)&lt;&lt;12);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>(((((int64_t)1)&lt;&lt;47)+var1))*((int64_t)<ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1aba96e3c2bdbbe79c20a836d9c55c60cf" kindref="member">dig_P1</ref>)&gt;&gt;33;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(var1<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>exception<sp/>caused<sp/>by<sp/>division<sp/>by<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>p_acc<sp/>=<sp/>1048576<sp/>-<sp/>adc_P;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>p_acc<sp/>=<sp/>(((p_acc&lt;&lt;31)<sp/>-<sp/>var2)*3125)/var1;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>(((int64_t)<ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a5e942a51a1b5d7753719db1e27e55c06" kindref="member">dig_P9</ref>)<sp/>*<sp/>(p_acc&gt;&gt;13)<sp/>*<sp/>(p_acc&gt;&gt;13))<sp/>&gt;&gt;<sp/>25;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>(((int64_t)<ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a06372d2918206f0cd35954e5bb35a1d2" kindref="member">dig_P8</ref>)<sp/>*<sp/>p_acc)<sp/>&gt;&gt;<sp/>19;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>p_acc<sp/>=<sp/>((p_acc<sp/>+<sp/>var1<sp/>+<sp/>var2)<sp/>&gt;&gt;<sp/>8)<sp/>+<sp/>(((int64_t)<ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1adda4a99343f9e02de7d9f2d5949477d2" kindref="member">dig_P7</ref>)&lt;&lt;4);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)p_acc<sp/>/<sp/>256.0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="df/dcf/class_b_m_e280_1af67b56ba50760ee1d116acc6c5010221" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="df/dcf/class_b_m_e280_1af67b56ba50760ee1d116acc6c5010221" kindref="member">BME280::readFloatAltitudeMeters</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>heightOutput<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>heightOutput<sp/>=<sp/>((float)-45846.2)*(pow(((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="df/dcf/class_b_m_e280_1ada6e799917afb4f228e6253bc56ffe75" kindref="member">readFloatPressure</ref>()/(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)101325),<sp/>0.190263)<sp/>-<sp/>(float)1);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>heightOutput;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="df/dcf/class_b_m_e280_1a6525c8a26f887b52596c86bed99343cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="df/dcf/class_b_m_e280_1a6525c8a26f887b52596c86bed99343cb" kindref="member">BME280::readFloatAltitudeFeet</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>heightOutput<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>heightOutput<sp/>=<sp/><ref refid="df/dcf/class_b_m_e280_1af67b56ba50760ee1d116acc6c5010221" kindref="member">readFloatAltitudeMeters</ref>()<sp/>*<sp/>3.28084;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>heightOutput;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//****************************************************************************//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Humidity<sp/>Section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//****************************************************************************//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="df/dcf/class_b_m_e280_1a42ea7232039eebf5aadb391ef6132c35" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="df/dcf/class_b_m_e280_1a42ea7232039eebf5aadb391ef6132c35" kindref="member">BME280::readFloatHumidity</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>humidity<sp/>in<sp/>%RH<sp/>as<sp/>unsigned<sp/>32<sp/>bit<sp/>integer<sp/>in<sp/>Q22.<sp/>10<sp/>format<sp/>(22<sp/>integer<sp/>and<sp/>10<sp/>fractional<sp/>bits).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>value<sp/>of<sp/>“47445”<sp/>represents<sp/>47445/1024<sp/>=<sp/>46.<sp/>333<sp/>%RH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>buffer[2];</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aecca87c2c40a7f2bcabcea921bdc6124" kindref="member">readRegisterRegion</ref>(buffer,<sp/><ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a463b030450826d7a286b272753c7c91c" kindref="member">BME280_HUMIDITY_MSB_REG</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>adc_H<sp/>=<sp/>((uint32_t)buffer[0]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>((uint32_t)buffer[1]);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>var1;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>(<ref refid="df/dcf/class_b_m_e280_1ad20f44914b78395f4d4bc64f4a68b369" kindref="member">t_fine</ref><sp/>-<sp/>((int32_t)76800));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>(((((adc_H<sp/>&lt;&lt;<sp/>14)<sp/>-<sp/>(((int32_t)<ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a6b540f7bc56275b482d65e0725aeb27b" kindref="member">dig_H4</ref>)<sp/>&lt;&lt;<sp/>20)<sp/>-<sp/>(((int32_t)<ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a03691fc56b0bff17b007ffbd71dcc7b9" kindref="member">dig_H5</ref>)<sp/>*<sp/>var1))<sp/>+</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>((int32_t)16384))<sp/>&gt;&gt;<sp/>15)<sp/>*<sp/>(((((((var1<sp/>*<sp/>((int32_t)<ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a2f8c842c4becfce11e04c00168a9be0f" kindref="member">dig_H6</ref>))<sp/>&gt;&gt;<sp/>10)<sp/>*<sp/>(((var1<sp/>*<sp/>((int32_t)<ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a65b525f9a3c58baf03db61da4626f417" kindref="member">dig_H3</ref>))<sp/>&gt;&gt;<sp/>11)<sp/>+<sp/>((int32_t)32768)))<sp/>&gt;&gt;<sp/>10)<sp/>+<sp/>((int32_t)2097152))<sp/>*</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>((int32_t)<ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1afcfd149e907f83effaee0ae5dfa82a8f" kindref="member">dig_H2</ref>)<sp/>+<sp/>8192)<sp/>&gt;&gt;<sp/>14));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>(var1<sp/>-<sp/>(((((var1<sp/>&gt;&gt;<sp/>15)<sp/>*<sp/>(var1<sp/>&gt;&gt;<sp/>15))<sp/>&gt;&gt;<sp/>7)<sp/>*<sp/>((int32_t)<ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1ab8de0d58f5b0efa7ce638bed02deb460" kindref="member">dig_H1</ref>))<sp/>&gt;&gt;<sp/>4));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>(var1<sp/>&lt;<sp/>0<sp/>?<sp/>0<sp/>:<sp/>var1);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>(var1<sp/>&gt;<sp/>419430400<sp/>?<sp/>419430400<sp/>:<sp/>var1);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(var1&gt;&gt;12)<sp/>/<sp/>1024.0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//****************************************************************************//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Temperature<sp/>Section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">//****************************************************************************//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="df/dcf/class_b_m_e280_1afffdd1d7ded9e1f92200e70669019d97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="df/dcf/class_b_m_e280_1afffdd1d7ded9e1f92200e70669019d97" kindref="member">BME280::readTempC</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>temperature<sp/>in<sp/>DegC,<sp/>resolution<sp/>is<sp/>0.01<sp/>DegC.<sp/>Output<sp/>value<sp/>of<sp/>“5123”<sp/>equals<sp/>51.23<sp/>DegC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>t_fine<sp/>carries<sp/>fine<sp/>temperature<sp/>as<sp/>global<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>reading<sp/>(adc_T);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>buffer[3];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aecca87c2c40a7f2bcabcea921bdc6124" kindref="member">readRegisterRegion</ref>(buffer,<sp/><ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a274a08bbc75e1b359aa6c46b50954b33" kindref="member">BME280_TEMPERATURE_MSB_REG</ref>,<sp/>3);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>adc_T<sp/>=<sp/>((uint32_t)buffer[0]<sp/>&lt;&lt;<sp/>12)<sp/>|<sp/>((uint32_t)buffer[1]<sp/>&lt;&lt;<sp/>4)<sp/>|<sp/>((buffer[2]<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0x0F);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//By<sp/>datasheet,<sp/>calibrate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>var1,<sp/>var2;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>((((adc_T&gt;&gt;3)<sp/>-<sp/>((int32_t)<ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a044a8c40e958b1cda3fb85b95303550e" kindref="member">dig_T1</ref>&lt;&lt;1)))<sp/>*<sp/>((int32_t)<ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a8f8bb62e10c9bc0decb4463128ccaee5" kindref="member">dig_T2</ref>))<sp/>&gt;&gt;<sp/>11;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>(((((adc_T&gt;&gt;4)<sp/>-<sp/>((int32_t)<ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a044a8c40e958b1cda3fb85b95303550e" kindref="member">dig_T1</ref>))<sp/>*<sp/>((adc_T&gt;&gt;4)<sp/>-<sp/>((int32_t)<ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a044a8c40e958b1cda3fb85b95303550e" kindref="member">dig_T1</ref>)))<sp/>&gt;&gt;<sp/>12)<sp/>*</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>((int32_t)<ref refid="df/dcf/class_b_m_e280_1aa7a28484b6f5eb6f43261ea25016fbf8" kindref="member">calibration</ref>.<ref refid="d0/d9c/struct_sensor_calibration_1a5b134db1776888487855c6b526d130d6" kindref="member">dig_T3</ref>))<sp/>&gt;&gt;<sp/>14;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1ad20f44914b78395f4d4bc64f4a68b369" kindref="member">t_fine</ref><sp/>=<sp/>var1<sp/>+<sp/>var2;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>output<sp/>=<sp/>(<ref refid="df/dcf/class_b_m_e280_1ad20f44914b78395f4d4bc64f4a68b369" kindref="member">t_fine</ref><sp/>*<sp/>5<sp/>+<sp/>128)<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>output<sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="df/dcf/class_b_m_e280_1a9648b496f6b4700550782a715a98b3c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="df/dcf/class_b_m_e280_1a9648b496f6b4700550782a715a98b3c7" kindref="member">BME280::readTempF</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>output<sp/>=<sp/><ref refid="df/dcf/class_b_m_e280_1afffdd1d7ded9e1f92200e70669019d97" kindref="member">readTempC</ref>();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>(output<sp/>*<sp/>9)<sp/>/<sp/>5<sp/>+<sp/>32;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//****************************************************************************//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Utility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//****************************************************************************//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="df/dcf/class_b_m_e280_1aecca87c2c40a7f2bcabcea921bdc6124" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/dcf/class_b_m_e280_1aecca87c2c40a7f2bcabcea921bdc6124" kindref="member">BME280::readRegisterRegion</ref>(uint8_t<sp/>*outputPointer<sp/>,<sp/>uint8_t<sp/>offset,<sp/>uint8_t<sp/>length)</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//define<sp/>pointer<sp/>that<sp/>will<sp/>point<sp/>to<sp/>the<sp/>external<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1a5bf116387c543a6ea5732976424e8cb1" kindref="member">commInterface</ref>)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a5cd01756030509b764d43a2b8c94fce8" kindref="member">I2C_MODE</ref>:</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.beginTransmission(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1af8103021dbce7e5ee6d786c4893324f7" kindref="member">I2CAddress</ref>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.write(offset);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.endTransmission();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>request<sp/>bytes<sp/>from<sp/>slave<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.requestFrom(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1af8103021dbce7e5ee6d786c4893324f7" kindref="member">I2CAddress</ref>,<sp/>length);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(Wire.available())<sp/>&amp;&amp;<sp/>(i<sp/>&lt;<sp/>length))<sp/><sp/></highlight><highlight class="comment">//<sp/>slave<sp/>may<sp/>send<sp/>less<sp/>than<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>Wire.read();<sp/></highlight><highlight class="comment">//<sp/>receive<sp/>a<sp/>byte<sp/>as<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outputPointer<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputPointer++;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1ab1dcc9464e3fcb94922386e8a7f53f21" kindref="member">SPI_MODE</ref>:</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>the<sp/>chip<sp/>select<sp/>low<sp/>to<sp/>select<sp/>the<sp/>device:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1abe2de606ebb580ad81e3fafb1a454580" kindref="member">chipSelectPin</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>the<sp/>device<sp/>the<sp/>register<sp/>you<sp/>want<sp/>to<sp/>read:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI.transfer(offset<sp/>|<sp/>0x80);<sp/><sp/></highlight><highlight class="comment">//Ored<sp/>with<sp/>&quot;read<sp/>request&quot;<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>&lt;<sp/>length<sp/>)<sp/></highlight><highlight class="comment">//<sp/>slave<sp/>may<sp/>send<sp/>less<sp/>than<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>SPI.transfer(0x00);<sp/></highlight><highlight class="comment">//<sp/>receive<sp/>a<sp/>byte<sp/>as<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outputPointer<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputPointer++;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>the<sp/>chip<sp/>select<sp/>high<sp/>to<sp/>de-select:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1abe2de606ebb580ad81e3fafb1a454580" kindref="member">chipSelectPin</ref>,<sp/>HIGH);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="df/dcf/class_b_m_e280_1a1bbd14c8591966df531e40085342ff71" kindref="member">BME280::readRegister</ref>(uint8_t<sp/>offset)</highlight></codeline>
<codeline lineno="339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Return<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>result;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>numBytes<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1a5bf116387c543a6ea5732976424e8cb1" kindref="member">commInterface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a5cd01756030509b764d43a2b8c94fce8" kindref="member">I2C_MODE</ref>:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.beginTransmission(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1af8103021dbce7e5ee6d786c4893324f7" kindref="member">I2CAddress</ref>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.write(offset);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.endTransmission();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.requestFrom(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1af8103021dbce7e5ee6d786c4893324f7" kindref="member">I2CAddress</ref>,<sp/>numBytes);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>Wire.available()<sp/>)<sp/></highlight><highlight class="comment">//<sp/>slave<sp/>may<sp/>send<sp/>less<sp/>than<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Wire.read();<sp/></highlight><highlight class="comment">//<sp/>receive<sp/>a<sp/>byte<sp/>as<sp/>a<sp/>proper<sp/>uint8_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1ab1dcc9464e3fcb94922386e8a7f53f21" kindref="member">SPI_MODE</ref>:</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>the<sp/>chip<sp/>select<sp/>low<sp/>to<sp/>select<sp/>the<sp/>device:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1abe2de606ebb580ad81e3fafb1a454580" kindref="member">chipSelectPin</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>the<sp/>device<sp/>the<sp/>register<sp/>you<sp/>want<sp/>to<sp/>read:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI.transfer(offset<sp/>|<sp/>0x80);<sp/><sp/></highlight><highlight class="comment">//Ored<sp/>with<sp/>&quot;read<sp/>request&quot;<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>a<sp/>value<sp/>of<sp/>0<sp/>to<sp/>read<sp/>the<sp/>first<sp/>byte<sp/>returned:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>SPI.transfer(0x00);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>the<sp/>chip<sp/>select<sp/>high<sp/>to<sp/>de-select:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1abe2de606ebb580ad81e3fafb1a454580" kindref="member">chipSelectPin</ref>,<sp/>HIGH);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="df/dcf/class_b_m_e280_1ac43c30f9b321d301694094d6b4bebe7e" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="df/dcf/class_b_m_e280_1ac43c30f9b321d301694094d6b4bebe7e" kindref="member">BME280::readRegisterInt16</ref>(<sp/>uint8_t<sp/>offset<sp/>)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>myBuffer[2];</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dcf/class_b_m_e280_1aecca87c2c40a7f2bcabcea921bdc6124" kindref="member">readRegisterRegion</ref>(myBuffer,<sp/>offset,<sp/>2);<sp/><sp/></highlight><highlight class="comment">//Does<sp/>memory<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>output<sp/>=<sp/>(int16_t)myBuffer[0]<sp/>|<sp/>int16_t(myBuffer[1]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="df/dcf/class_b_m_e280_1afcff21c342725246bf415d7f0e4d04f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/dcf/class_b_m_e280_1afcff21c342725246bf415d7f0e4d04f0" kindref="member">BME280::writeRegister</ref>(uint8_t<sp/>offset,<sp/>uint8_t<sp/>dataToWrite)</highlight></codeline>
<codeline lineno="384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1a5bf116387c543a6ea5732976424e8cb1" kindref="member">commInterface</ref>)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1a5cd01756030509b764d43a2b8c94fce8" kindref="member">I2C_MODE</ref>:</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Write<sp/>the<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.beginTransmission(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1af8103021dbce7e5ee6d786c4893324f7" kindref="member">I2CAddress</ref>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.write(offset);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.write(dataToWrite);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wire.endTransmission();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d2/d3a/_cool_spark_fun_b_m_e280_8h_1ab1dcc9464e3fcb94922386e8a7f53f21" kindref="member">SPI_MODE</ref>:</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>the<sp/>chip<sp/>select<sp/>low<sp/>to<sp/>select<sp/>the<sp/>device:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1abe2de606ebb580ad81e3fafb1a454580" kindref="member">chipSelectPin</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>the<sp/>device<sp/>the<sp/>register<sp/>you<sp/>want<sp/>to<sp/>read:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI.transfer(offset<sp/>&amp;<sp/>0x7F);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>a<sp/>value<sp/>of<sp/>0<sp/>to<sp/>read<sp/>the<sp/>first<sp/>byte<sp/>returned:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI.transfer(dataToWrite);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>left<sp/>to<sp/>read:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>the<sp/>chip<sp/>select<sp/>high<sp/>to<sp/>de-select:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="df/dcf/class_b_m_e280_1af06253eb2f8ad4b5fabb858bc4a973bf" kindref="member">settings</ref>.<ref refid="d8/dd4/struct_sensor_settings_1abe2de606ebb580ad81e3fafb1a454580" kindref="member">chipSelectPin</ref>,<sp/>HIGH);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/internals/CoolSparkFunBME280.cpp"/>
  </compounddef>
</doxygen>
