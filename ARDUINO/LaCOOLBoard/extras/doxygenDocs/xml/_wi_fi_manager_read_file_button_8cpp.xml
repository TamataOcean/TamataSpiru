<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_wi_fi_manager_read_file_button_8cpp" kind="file" language="C++">
    <compoundname>WiFiManagerReadFileButton.cpp</compoundname>
    <includes local="yes">FS.h</includes>
    <includes refid="_wi_fi_manager_read_file_button_8h" local="yes">WiFiManagerReadFileButton.h</includes>
    <includes local="yes">ArduinoJson.h</includes>
    <incdepgraph>
      <node id="328">
        <label>FS.h</label>
      </node>
      <node id="330">
        <label>ESP8266WiFi.h</label>
      </node>
      <node id="331">
        <label>ESP8266WebServer.h</label>
      </node>
      <node id="335">
        <label>ArduinoJson.h</label>
      </node>
      <node id="327">
        <label>/home/ashiroji/Arduino/libraries/CoolBoard/src/internals/WiFiManagerReadFileButton.cpp</label>
        <link refid="_wi_fi_manager_read_file_button_8cpp"/>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="329" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
      </node>
      <node id="334">
        <label>user_interface.h</label>
      </node>
      <node id="329">
        <label>WiFiManagerReadFileButton.h</label>
        <link refid="_wi_fi_manager_read_file_button_8h"/>
        <childnode refid="330" relation="include">
        </childnode>
        <childnode refid="331" relation="include">
        </childnode>
        <childnode refid="332" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="334" relation="include">
        </childnode>
      </node>
      <node id="332">
        <label>DNSServer.h</label>
      </node>
      <node id="333">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/>WiFiManager<sp/>is<sp/>a<sp/>library<sp/>for<sp/>the<sp/>ESP8266/Arduino<sp/>platform</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>(https://github.com/esp8266/Arduino)<sp/>to<sp/>enable<sp/>easy</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>configuration<sp/>and<sp/>reconfiguration<sp/>of<sp/>WiFi<sp/>credentials<sp/>using<sp/>a<sp/>Captive<sp/>Portal</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>inspired<sp/>by:</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/>http://www.esp8266.com/viewtopic.php?f=29&amp;t=2520</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>https://github.com/chriscook8/esp-arduino-apboot</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/>https://github.com/esp8266/Arduino/tree/esp8266/hardware/esp8266com/esp8266/libraries/DNSServer/examples/CaptivePortalAdvanced</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/>Built<sp/>by<sp/>AlexT<sp/>https://github.com/tzapu</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/>Modified<sp/>by<sp/>MehdiZ<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/>Licensed<sp/>under<sp/>MIT<sp/>license</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;FS.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_wi_fi_manager_read_file_button_8h" kindref="compound">WiFiManagerReadFileButton.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ArduinoJson.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_wi_fi_manager_parameter_1a6e9da46ea712de5d61449098414a3b66" refkind="member"><highlight class="normal"><ref refid="class_wi_fi_manager_parameter_1a6e9da46ea712de5d61449098414a3b66" kindref="member">WiFiManagerParameter::WiFiManagerParameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*custom)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_parameter_1a2b468d83df6e0714c18a38f09e7996ed" kindref="member">_id</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_parameter_1aceb6003c96280319fb19f83ebaf3034b" kindref="member">_placeholder</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_parameter_1a30ca2df3654651a1b5320261a061b774" kindref="member">_length</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_parameter_1a80c6492e74603e4df46219b23580ecb6" kindref="member">_value</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_parameter_1a3823cb117da1a75860cc3e81b0c6f80d" kindref="member">_customHTML</ref><sp/>=<sp/>custom;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_wi_fi_manager_parameter_1a8e55ac907530d04ab60d30045e1382a1" refkind="member"><highlight class="normal"><ref refid="class_wi_fi_manager_parameter_1a6e9da46ea712de5d61449098414a3b66" kindref="member">WiFiManagerParameter::WiFiManagerParameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*placeholder,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*defaultValue,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_parameter_1a137b764027d3851a428f3ab185a5660f" kindref="member">init</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>placeholder,<sp/>defaultValue,<sp/>length,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_wi_fi_manager_parameter_1a45967e1d29d52f5fc8e47e99cb693b98" refkind="member"><highlight class="normal"><ref refid="class_wi_fi_manager_parameter_1a6e9da46ea712de5d61449098414a3b66" kindref="member">WiFiManagerParameter::WiFiManagerParameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*placeholder,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*defaultValue,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*custom)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_parameter_1a137b764027d3851a428f3ab185a5660f" kindref="member">init</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>placeholder,<sp/>defaultValue,<sp/>length,<sp/>custom);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_wi_fi_manager_parameter_1a137b764027d3851a428f3ab185a5660f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_parameter_1a137b764027d3851a428f3ab185a5660f" kindref="member">WiFiManagerParameter::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*placeholder,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*defaultValue,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*custom)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_parameter_1a2b468d83df6e0714c18a38f09e7996ed" kindref="member">_id</ref><sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_parameter_1aceb6003c96280319fb19f83ebaf3034b" kindref="member">_placeholder</ref><sp/>=<sp/>placeholder;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_parameter_1a30ca2df3654651a1b5320261a061b774" kindref="member">_length</ref><sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_parameter_1a80c6492e74603e4df46219b23580ecb6" kindref="member">_value</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[length<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_parameter_1a80c6492e74603e4df46219b23580ecb6" kindref="member">_value</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(defaultValue<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(<ref refid="class_wi_fi_manager_parameter_1a80c6492e74603e4df46219b23580ecb6" kindref="member">_value</ref>,<sp/>defaultValue,<sp/>length);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_parameter_1a3823cb117da1a75860cc3e81b0c6f80d" kindref="member">_customHTML</ref><sp/>=<sp/>custom;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_wi_fi_manager_parameter_1a23d23709f466ef1c3c2535a39016ec0f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_wi_fi_manager_parameter_1a23d23709f466ef1c3c2535a39016ec0f" kindref="member">WiFiManagerParameter::getValue</ref>()<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_parameter_1a80c6492e74603e4df46219b23580ecb6" kindref="member">_value</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52" refid="class_wi_fi_manager_parameter_1af57919615418fff788310ba9cc2664d8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_wi_fi_manager_parameter_1af57919615418fff788310ba9cc2664d8" kindref="member">WiFiManagerParameter::getID</ref>()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_parameter_1a2b468d83df6e0714c18a38f09e7996ed" kindref="member">_id</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55" refid="class_wi_fi_manager_parameter_1a69124c6f46876d1ede54177c692e3382" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_wi_fi_manager_parameter_1a69124c6f46876d1ede54177c692e3382" kindref="member">WiFiManagerParameter::getPlaceholder</ref>()<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_parameter_1aceb6003c96280319fb19f83ebaf3034b" kindref="member">_placeholder</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58" refid="class_wi_fi_manager_parameter_1a51715af23f9c067a73cc45fab7953606" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_parameter_1a51715af23f9c067a73cc45fab7953606" kindref="member">WiFiManagerParameter::getValueLength</ref>()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_parameter_1a30ca2df3654651a1b5320261a061b774" kindref="member">_length</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61" refid="class_wi_fi_manager_parameter_1a596273c189eb40107500cee3ad31b13b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_wi_fi_manager_parameter_1a596273c189eb40107500cee3ad31b13b" kindref="member">WiFiManagerParameter::getCustomHTML</ref>()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_parameter_1a3823cb117da1a75860cc3e81b0c6f80d" kindref="member">_customHTML</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="class_wi_fi_manager_1a7d2efc3a8d43169ad058fc1fe797e106" refkind="member"><highlight class="normal"><ref refid="class_wi_fi_manager_1a7d2efc3a8d43169ad058fc1fe797e106" kindref="member">WiFiManager::WiFiManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_wi_fi_manager_1a62907428e5874de097d83c33ef46c80d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a62907428e5874de097d83c33ef46c80d" kindref="member">WiFiManager::addParameter</ref>(<ref refid="class_wi_fi_manager_parameter" kindref="compound">WiFiManagerParameter</ref><sp/>*p)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a355ce9bbaab94baffd1c83de9b166fea" kindref="member">_params</ref>[<ref refid="class_wi_fi_manager_1a22e803d23ae77cb611914445db17c9b6" kindref="member">_paramsCount</ref>]<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a22e803d23ae77cb611914445db17c9b6" kindref="member">_paramsCount</ref>++;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(</highlight><highlight class="stringliteral">&quot;Adding<sp/>parameter&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(p-&gt;<ref refid="class_wi_fi_manager_parameter_1af57919615418fff788310ba9cc2664d8" kindref="member">getID</ref>());</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="class_wi_fi_manager_1a1743325d0dd86d011df96b22d2a0ddd6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a1743325d0dd86d011df96b22d2a0ddd6" kindref="member">WiFiManager::setupConfigPortal</ref>()<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1af44ccd00daee619a7bcc89000fa063ca" kindref="member">dnsServer</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DNSServer());</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ESP8266WebServer(80));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a64bd63776978c1f61ed9e84926cf4a51" kindref="member">_configPortalStart</ref><sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;Configuring<sp/>access<sp/>point...<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(<ref refid="class_wi_fi_manager_1a2c27e2f375122254cde4b2fd9ed1e117" kindref="member">_apName</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1a63fb98629ab722ec513c14c73f352c12" kindref="member">_apPassword</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(<ref refid="class_wi_fi_manager_1a63fb98629ab722ec513c14c73f352c12" kindref="member">_apPassword</ref>)<sp/>&lt;<sp/>8<sp/>||<sp/>strlen(<ref refid="class_wi_fi_manager_1a63fb98629ab722ec513c14c73f352c12" kindref="member">_apPassword</ref>)<sp/>&gt;<sp/>63)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fail<sp/>passphrase<sp/>to<sp/>short<sp/>or<sp/>long!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>AccessPoint<sp/>password.<sp/>Ignoring&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1a63fb98629ab722ec513c14c73f352c12" kindref="member">_apPassword</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(<ref refid="class_wi_fi_manager_1a63fb98629ab722ec513c14c73f352c12" kindref="member">_apPassword</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//optional<sp/>soft<sp/>ip<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1ae81b413e85811506099ba6eab48e1006" kindref="member">_ap_static_ip</ref>)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;Custom<sp/>AP<sp/>IP/GW/Subnet&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>WiFi.softAPConfig(<ref refid="class_wi_fi_manager_1ae81b413e85811506099ba6eab48e1006" kindref="member">_ap_static_ip</ref>,<sp/><ref refid="class_wi_fi_manager_1a5ab87bab28f0dc3c865912b4bb303992" kindref="member">_ap_static_gw</ref>,<sp/><ref refid="class_wi_fi_manager_1a8122027aecd1a1dd9b60f21e87286808" kindref="member">_ap_static_sn</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1a63fb98629ab722ec513c14c73f352c12" kindref="member">_apPassword</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>WiFi.softAP(<ref refid="class_wi_fi_manager_1a2c27e2f375122254cde4b2fd9ed1e117" kindref="member">_apName</ref>,<sp/><ref refid="class_wi_fi_manager_1a63fb98629ab722ec513c14c73f352c12" kindref="member">_apPassword</ref>);</highlight><highlight class="comment">//password<sp/>option</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>WiFi.softAP(<ref refid="class_wi_fi_manager_1a2c27e2f375122254cde4b2fd9ed1e117" kindref="member">_apName</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>delay(500);<sp/></highlight><highlight class="comment">//<sp/>Without<sp/>delay<sp/>I&apos;ve<sp/>seen<sp/>the<sp/>IP<sp/>address<sp/>blank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;AP<sp/>IP<sp/>address:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(WiFi.softAPIP());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Setup<sp/>the<sp/>DNS<sp/>server<sp/>redirecting<sp/>all<sp/>the<sp/>domains<sp/>to<sp/>the<sp/>apIP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1af44ccd00daee619a7bcc89000fa063ca" kindref="member">dnsServer</ref>-&gt;setErrorReplyCode(DNSReplyCode::NoError);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1af44ccd00daee619a7bcc89000fa063ca" kindref="member">dnsServer</ref>-&gt;start(<ref refid="class_wi_fi_manager_1ad0be1f49d4d59067c3d96ae47b061f7f" kindref="member">DNS_PORT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/>WiFi.softAPIP());</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Setup<sp/>web<sp/>pages:<sp/>root,<sp/>wifi<sp/>config<sp/>pages,<sp/>SO<sp/>captive<sp/>portal<sp/>detectors<sp/>and<sp/>not<sp/>found.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;on(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,<sp/>std::bind(&amp;<ref refid="class_wi_fi_manager_1a47e4c7df7478f690c53ff9f5125c9760" kindref="member">WiFiManager::handleRoot</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;on(</highlight><highlight class="stringliteral">&quot;/wifi&quot;</highlight><highlight class="normal">,<sp/>std::bind(&amp;<ref refid="class_wi_fi_manager_1a57a9048175c1918340ab9d0a2c53601f" kindref="member">WiFiManager::handleWifi</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;on(</highlight><highlight class="stringliteral">&quot;/0wifi&quot;</highlight><highlight class="normal">,<sp/>std::bind(&amp;<ref refid="class_wi_fi_manager_1a57a9048175c1918340ab9d0a2c53601f" kindref="member">WiFiManager::handleWifi</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;on(</highlight><highlight class="stringliteral">&quot;/wifisave&quot;</highlight><highlight class="normal">,<sp/>std::bind(&amp;<ref refid="class_wi_fi_manager_1a2a8c2b60aa86dfdeab8a1a90f7122dc7" kindref="member">WiFiManager::handleWifiSave</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;on(</highlight><highlight class="stringliteral">&quot;/i&quot;</highlight><highlight class="normal">,<sp/>std::bind(&amp;<ref refid="class_wi_fi_manager_1ac35e46661f8a209d84bba62d9aa43a35" kindref="member">WiFiManager::handleInfo</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;on(</highlight><highlight class="stringliteral">&quot;/r&quot;</highlight><highlight class="normal">,<sp/>std::bind(&amp;<ref refid="class_wi_fi_manager_1a94fb1a8fcfbd0d02714c69138bf72f9c" kindref="member">WiFiManager::handleReset</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//server-&gt;on(&quot;/generate_204&quot;,<sp/>std::bind(&amp;WiFiManager::handle204,<sp/>this));<sp/><sp/>//Android/Chrome<sp/>OS<sp/>captive<sp/>portal<sp/>check.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;on(</highlight><highlight class="stringliteral">&quot;/fwlink&quot;</highlight><highlight class="normal">,<sp/>std::bind(&amp;<ref refid="class_wi_fi_manager_1a47e4c7df7478f690c53ff9f5125c9760" kindref="member">WiFiManager::handleRoot</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));<sp/><sp/></highlight><highlight class="comment">//Microsoft<sp/>captive<sp/>portal.<sp/>Maybe<sp/>not<sp/>needed.<sp/>Might<sp/>be<sp/>handled<sp/>by<sp/>notFound<sp/>handler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;on(</highlight><highlight class="stringliteral">&quot;/sensorsData.csv&quot;</highlight><highlight class="normal">,<sp/>std::bind(&amp;<ref refid="class_wi_fi_manager_1a9e802fa4ca834a622f058a7176f47806" kindref="member">WiFiManager::handleFileRead</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;/sensorsData.csv&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;onNotFound<sp/>(std::bind(&amp;<ref refid="class_wi_fi_manager_1a7d01f7de3e4b76acdabffac79fa3d0ab" kindref="member">WiFiManager::handleNotFound</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;begin();<sp/></highlight><highlight class="comment">//<sp/>Web<sp/>server<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;HTTP<sp/>server<sp/>started&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="class_wi_fi_manager_1ae3cdfa6b02edcfe63d7da4f696b62136" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1ae3cdfa6b02edcfe63d7da4f696b62136" kindref="member">WiFiManager::autoConnect</ref>()<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>String<sp/>ssid<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ESP&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(ESP.getChipId());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1ae3cdfa6b02edcfe63d7da4f696b62136" kindref="member">autoConnect</ref>(ssid.c_str(),<sp/>NULL);</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="class_wi_fi_manager_1ab1d094034e5e3e36e2e1b3624edad469" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1ae3cdfa6b02edcfe63d7da4f696b62136" kindref="member">WiFiManager::autoConnect</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*apName,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*apPassword)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;AutoConnect&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>eeprom<sp/>for<sp/>ssid<sp/>and<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//String<sp/>ssid<sp/>=<sp/>getSSID();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//String<sp/>pass<sp/>=<sp/>getPassword();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>attempt<sp/>to<sp/>connect;<sp/>should<sp/>it<sp/>fail,<sp/>fall<sp/>back<sp/>to<sp/>AP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>WiFi.mode(WIFI_STA);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1ae0ae27b5543b47585728c084c3bbdca7" kindref="member">connectWifi</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>==<sp/>WL_CONNECTED)<sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;IP<sp/>Address:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(WiFi.localIP());</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1ad781751307f7f623956126096a09a545" kindref="member">startConfigPortal</ref>(apName,<sp/>apPassword);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="class_wi_fi_manager_1ad781751307f7f623956126096a09a545" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1ad781751307f7f623956126096a09a545" kindref="member">WiFiManager::startConfigPortal</ref>()<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>String<sp/>ssid<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ESP&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(ESP.getChipId());</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1ad781751307f7f623956126096a09a545" kindref="member">startConfigPortal</ref>(ssid.c_str(),<sp/>NULL);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="class_wi_fi_manager_1afaca5021edffb4d9a5bd39f7b0f7a686" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ad781751307f7f623956126096a09a545" kindref="member">WiFiManager::startConfigPortal</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*apName,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*apPassword)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//setup<sp/>AP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>WiFi.mode(WIFI_AP_STA);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(</highlight><highlight class="stringliteral">&quot;SET<sp/>AP<sp/>STA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a2c27e2f375122254cde4b2fd9ed1e117" kindref="member">_apName</ref><sp/>=<sp/>apName;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a63fb98629ab722ec513c14c73f352c12" kindref="member">_apPassword</ref><sp/>=<sp/>apPassword;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//notify<sp/>we<sp/>entered<sp/>AP<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_wi_fi_manager_1ad166247d94aef10a3a8aa34da1351b27" kindref="member">_apcallback</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ad166247d94aef10a3a8aa34da1351b27" kindref="member">_apcallback</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a7be7e74e93283eea089af659184dd906" kindref="member">connect</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a1743325d0dd86d011df96b22d2a0ddd6" kindref="member">setupConfigPortal</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1ae6c969ba67e0a029dcde1c3511ca79b7" kindref="member">_configPortalTimeout</ref><sp/>==<sp/>0<sp/>||<sp/>millis()<sp/>&lt;<sp/><ref refid="class_wi_fi_manager_1a64bd63776978c1f61ed9e84926cf4a51" kindref="member">_configPortalStart</ref><sp/>+<sp/><ref refid="class_wi_fi_manager_1ae6c969ba67e0a029dcde1c3511ca79b7" kindref="member">_configPortalTimeout</ref>)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DNS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1af44ccd00daee619a7bcc89000fa063ca" kindref="member">dnsServer</ref>-&gt;processNextRequest();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//HTTP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;handleClient();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1a7be7e74e93283eea089af659184dd906" kindref="member">connect</ref>)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1a7be7e74e93283eea089af659184dd906" kindref="member">connect</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delay(2000);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;Connecting<sp/>to<sp/>new<sp/>AP&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>user-provided<sp/><sp/>_ssid,<sp/>_pass<sp/>in<sp/>place<sp/>of<sp/>system-stored<sp/>ssid<sp/>and<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1ae0ae27b5543b47585728c084c3bbdca7" kindref="member">connectWifi</ref>(<ref refid="class_wi_fi_manager_1a43fdc9234ac52d98aeea31148f96526d" kindref="member">_ssid</ref>,<sp/><ref refid="class_wi_fi_manager_1a7486c2c0b67884ea872a4fe56d3450b2" kindref="member">_pass</ref>)<sp/>!=<sp/>WL_CONNECTED)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>connect.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WiFi.mode(WIFI_STA);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//notify<sp/>that<sp/>configuration<sp/>has<sp/>changed<sp/>and<sp/>any<sp/>optional<sp/>parameters<sp/>should<sp/>be<sp/>saved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_wi_fi_manager_1a9a316060184788e33e71d88101cb2e0d" kindref="member">_savecallback</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//todo:<sp/>check<sp/>if<sp/>any<sp/>custom<sp/>parameters<sp/>actually<sp/>exist,<sp/>and<sp/>check<sp/>if<sp/>they<sp/>really<sp/>changed<sp/>maybe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1a9a316060184788e33e71d88101cb2e0d" kindref="member">_savecallback</ref>();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1adf42bd3bb7ac538e97407f66e5170858" kindref="member">_shouldBreakAfterConfig</ref>)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//flag<sp/>set<sp/>to<sp/>exit<sp/>after<sp/>config<sp/>after<sp/>trying<sp/>to<sp/>connect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//notify<sp/>that<sp/>configuration<sp/>has<sp/>changed<sp/>and<sp/>any<sp/>optional<sp/>parameters<sp/>should<sp/>be<sp/>saved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_wi_fi_manager_1a9a316060184788e33e71d88101cb2e0d" kindref="member">_savecallback</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//todo:<sp/>check<sp/>if<sp/>any<sp/>custom<sp/>parameters<sp/>actually<sp/>exist,<sp/>and<sp/>check<sp/>if<sp/>they<sp/>really<sp/>changed<sp/>maybe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1a9a316060184788e33e71d88101cb2e0d" kindref="member">_savecallback</ref>();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>yield();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>.reset();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1af44ccd00daee619a7bcc89000fa063ca" kindref="member">dnsServer</ref>.reset();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>WiFi.status()<sp/>==<sp/>WL_CONNECTED;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="class_wi_fi_manager_1ae0ae27b5543b47585728c084c3bbdca7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1ae0ae27b5543b47585728c084c3bbdca7" kindref="member">WiFiManager::connectWifi</ref>(String<sp/>ssid,<sp/>String<sp/>pass)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;Connecting<sp/>as<sp/>wifi<sp/>client...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>we&apos;ve<sp/>got<sp/>static_ip<sp/>settings,<sp/>if<sp/>we<sp/>do,<sp/>use<sp/>those.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1ad90d356096742a43b4540117b92faff0" kindref="member">_sta_static_ip</ref>)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;Custom<sp/>STA<sp/>IP/GW/Subnet&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>WiFi.config(<ref refid="class_wi_fi_manager_1ad90d356096742a43b4540117b92faff0" kindref="member">_sta_static_ip</ref>,<sp/><ref refid="class_wi_fi_manager_1a36648ca4819dc0feedaf9e1987d56d96" kindref="member">_sta_static_gw</ref>,<sp/><ref refid="class_wi_fi_manager_1a3fd337255bce688189f9d450cc0ca3a3" kindref="member">_sta_static_sn</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(WiFi.localIP());</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//fix<sp/>for<sp/>auto<sp/>connect<sp/>racing<sp/>issue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WiFi.status()<sp/>==<sp/>WL_CONNECTED)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(</highlight><highlight class="stringliteral">&quot;Already<sp/>connected.<sp/>Bailing<sp/>out.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WL_CONNECTED;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//check<sp/>if<sp/>we<sp/>have<sp/>ssid<sp/>and<sp/>pass<sp/>and<sp/>force<sp/>those,<sp/>if<sp/>not,<sp/>try<sp/>with<sp/>last<sp/>saved<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ssid<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>WiFi.begin(ssid.c_str(),<sp/>pass.c_str());</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WiFi.SSID())<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(</highlight><highlight class="stringliteral">&quot;Using<sp/>last<sp/>saved<sp/>values,<sp/>should<sp/>be<sp/>faster&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//trying<sp/>to<sp/>fix<sp/>connection<sp/>in<sp/>progress<sp/>hanging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ETS_UART_INTR_DISABLE();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wifi_station_disconnect();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ETS_UART_INTR_ENABLE();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WiFi.begin();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>saved<sp/>credentials&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>connRes<sp/>=<sp/><ref refid="class_wi_fi_manager_1a89a3f33997aa662ad223d6c150c1eede" kindref="member">waitForConnectResult</ref>();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Connection<sp/>result:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref><sp/>(<sp/>connRes<sp/>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//not<sp/>connected,<sp/>WPS<sp/>enabled,<sp/>no<sp/>pass<sp/>-<sp/>first<sp/>attempt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1aad7bf8cc9ff4bf7603f9ce42923c9df1" kindref="member">_tryWPS</ref><sp/>&amp;&amp;<sp/>connRes<sp/>!=<sp/>WL_CONNECTED<sp/>&amp;&amp;<sp/>pass<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1abcc403fc26a47f7a111d1271f1d0869e" kindref="member">startWPS</ref>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//should<sp/>be<sp/>connected<sp/>at<sp/>the<sp/>end<sp/>of<sp/>WPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>connRes<sp/>=<sp/><ref refid="class_wi_fi_manager_1a89a3f33997aa662ad223d6c150c1eede" kindref="member">waitForConnectResult</ref>();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>connRes;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="class_wi_fi_manager_1a89a3f33997aa662ad223d6c150c1eede" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_wi_fi_manager_1a89a3f33997aa662ad223d6c150c1eede" kindref="member">WiFiManager::waitForConnectResult</ref>()<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1a6c03ca5d418b4d46e9a6d751a902184c" kindref="member">_connectTimeout</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WiFi.waitForConnectResult();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref><sp/>(F(</highlight><highlight class="stringliteral">&quot;Waiting<sp/>for<sp/>connection<sp/>result<sp/>with<sp/>time<sp/>out&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>keepConnecting<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_wi_fi_manager_1acceea0054a30c18809b34151d4e9eb0b" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(keepConnecting)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>WiFi.status();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(millis()<sp/>&gt;<sp/>start<sp/>+<sp/><ref refid="class_wi_fi_manager_1a6c03ca5d418b4d46e9a6d751a902184c" kindref="member">_connectTimeout</ref>)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keepConnecting<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref><sp/>(F(</highlight><highlight class="stringliteral">&quot;Connection<sp/>timed<sp/>out&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>WL_CONNECTED<sp/>||<sp/>status<sp/>==<sp/>WL_CONNECT_FAILED)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keepConnecting<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delay(100);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1acceea0054a30c18809b34151d4e9eb0b" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="class_wi_fi_manager_1abcc403fc26a47f7a111d1271f1d0869e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1abcc403fc26a47f7a111d1271f1d0869e" kindref="member">WiFiManager::startWPS</ref>()<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(</highlight><highlight class="stringliteral">&quot;START<sp/>WPS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>WiFi.beginWPSConfig();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(</highlight><highlight class="stringliteral">&quot;END<sp/>WPS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/>String<sp/>WiFiManager::getSSID()<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/>if<sp/>(_ssid<sp/>==<sp/>&quot;&quot;)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_WM(F(&quot;Reading<sp/>SSID&quot;));</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/>_ssid<sp/>=<sp/>WiFi.SSID();</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_WM(F(&quot;SSID:<sp/>&quot;));</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_WM(_ssid);</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/>return<sp/>_ssid;</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="comment"></highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/>String<sp/>WiFiManager::getPassword()<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/>if<sp/>(_pass<sp/>==<sp/>&quot;&quot;)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_WM(F(&quot;Reading<sp/>Password&quot;));</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/>_pass<sp/>=<sp/>WiFi.psk();</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_WM(&quot;Password:<sp/>&quot;<sp/>+<sp/>_pass);</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/>//DEBUG_WM(_pass);</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/>return<sp/>_pass;</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="class_wi_fi_manager_1a157dc79b810f8f8d338a6120b13f5c94" refkind="member"><highlight class="normal">String<sp/><ref refid="class_wi_fi_manager_1a157dc79b810f8f8d338a6120b13f5c94" kindref="member">WiFiManager::getConfigPortalSSID</ref>()<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a2c27e2f375122254cde4b2fd9ed1e117" kindref="member">_apName</ref>;</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="class_wi_fi_manager_1a0027749816b6c66bc845d7c5db760a33" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a0027749816b6c66bc845d7c5db760a33" kindref="member">WiFiManager::resetSettings</ref>()<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;settings<sp/>invalidated&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;THIS<sp/>MAY<sp/>CAUSE<sp/>AP<sp/>NOT<sp/>TO<sp/>START<sp/>UP<sp/>PROPERLY.<sp/>YOU<sp/>NEED<sp/>TO<sp/>COMMENT<sp/>IT<sp/>OUT<sp/>AFTER<sp/>ERASING<sp/>THE<sp/>DATA.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>WiFi.disconnect(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//delay(200);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324" refid="class_wi_fi_manager_1aa6493d59c284ff245edb767ff684756d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1aa6493d59c284ff245edb767ff684756d" kindref="member">WiFiManager::setTimeout</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>seconds)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a904006cb4d2c769e93bfdef336853766" kindref="member">setConfigPortalTimeout</ref>(seconds);</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="class_wi_fi_manager_1a904006cb4d2c769e93bfdef336853766" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a904006cb4d2c769e93bfdef336853766" kindref="member">WiFiManager::setConfigPortalTimeout</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>seconds)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae6c969ba67e0a029dcde1c3511ca79b7" kindref="member">_configPortalTimeout</ref><sp/>=<sp/>seconds<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="class_wi_fi_manager_1a508fa98e77d165b29764f68d48b7a349" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a508fa98e77d165b29764f68d48b7a349" kindref="member">WiFiManager::setConnectTimeout</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>seconds)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a6c03ca5d418b4d46e9a6d751a902184c" kindref="member">_connectTimeout</ref><sp/>=<sp/>seconds<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="class_wi_fi_manager_1a70d7f17596b9f10c3e4770702ac991c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a70d7f17596b9f10c3e4770702ac991c5" kindref="member">WiFiManager::setDebugOutput</ref>(</highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>debug)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ac0f345f4a4c8bc38a49c8f87931b8cd4" kindref="member">_debug</ref><sp/>=<sp/>debug;</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="class_wi_fi_manager_1a70007205081cd9bfe4123b65553adf42" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a70007205081cd9bfe4123b65553adf42" kindref="member">WiFiManager::setAPStaticIPConfig</ref>(IPAddress<sp/>ip,<sp/>IPAddress<sp/>gw,<sp/>IPAddress<sp/>sn)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae81b413e85811506099ba6eab48e1006" kindref="member">_ap_static_ip</ref><sp/>=<sp/>ip;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a5ab87bab28f0dc3c865912b4bb303992" kindref="member">_ap_static_gw</ref><sp/>=<sp/>gw;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a8122027aecd1a1dd9b60f21e87286808" kindref="member">_ap_static_sn</ref><sp/>=<sp/>sn;</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="class_wi_fi_manager_1a124d89536d0ba5b5bd117e6c44a53e8d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a124d89536d0ba5b5bd117e6c44a53e8d" kindref="member">WiFiManager::setSTAStaticIPConfig</ref>(IPAddress<sp/>ip,<sp/>IPAddress<sp/>gw,<sp/>IPAddress<sp/>sn)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ad90d356096742a43b4540117b92faff0" kindref="member">_sta_static_ip</ref><sp/>=<sp/>ip;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a36648ca4819dc0feedaf9e1987d56d96" kindref="member">_sta_static_gw</ref><sp/>=<sp/>gw;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a3fd337255bce688189f9d450cc0ca3a3" kindref="member">_sta_static_sn</ref><sp/>=<sp/>sn;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="class_wi_fi_manager_1a8cc211e7e004a44798d5b422a874f94b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a8cc211e7e004a44798d5b422a874f94b" kindref="member">WiFiManager::setMinimumSignalQuality</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quality)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ad1e130a5ce502767de764ea0cb1cecf6" kindref="member">_minimumQuality</ref><sp/>=<sp/>quality;</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="class_wi_fi_manager_1ad48fd74c893d12778121fa239d245cc9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1ad48fd74c893d12778121fa239d245cc9" kindref="member">WiFiManager::setBreakAfterConfig</ref>(</highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>shouldBreak)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1adf42bd3bb7ac538e97407f66e5170858" kindref="member">_shouldBreakAfterConfig</ref><sp/>=<sp/>shouldBreak;</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="class_wi_fi_manager_1a47e4c7df7478f690c53ff9f5125c9760" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a47e4c7df7478f690c53ff9f5125c9760" kindref="member">WiFiManager::handleRoot</ref>()<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;Handle<sp/>root&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1a4ef4298deb224212e5242c456669a973" kindref="member">captivePortal</ref>())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>If<sp/>caprive<sp/>portal<sp/>redirect<sp/>instead<sp/>of<sp/>displaying<sp/>the<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>String<sp/>page<sp/>=<sp/>FPSTR(HTTP_HEAD);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>page.replace(</highlight><highlight class="stringliteral">&quot;{v}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Options&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_SCRIPT);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_STYLE);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/><ref refid="class_wi_fi_manager_1a8860012564a62209d750c50e56319192" kindref="member">_customHeadElement</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_HEAD_END);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&lt;h1&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/><ref refid="class_wi_fi_manager_1a2c27e2f375122254cde4b2fd9ed1e117" kindref="member">_apName</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&lt;/h1&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>F(</highlight><highlight class="stringliteral">&quot;&lt;h3&gt;WiFiManager&lt;/h3&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_PORTAL_OPTIONS);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_END);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;send(200,<sp/></highlight><highlight class="stringliteral">&quot;text/html&quot;</highlight><highlight class="normal">,<sp/>page);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="class_wi_fi_manager_1a57a9048175c1918340ab9d0a2c53601f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a57a9048175c1918340ab9d0a2c53601f" kindref="member">WiFiManager::handleWifi</ref>(</highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>scan)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>String<sp/>page<sp/>=<sp/>FPSTR(HTTP_HEAD);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>page.replace(</highlight><highlight class="stringliteral">&quot;{v}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Config<sp/>ESP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_SCRIPT);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_STYLE);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/><ref refid="class_wi_fi_manager_1a8860012564a62209d750c50e56319192" kindref="member">_customHeadElement</ref>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_HEAD_END);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scan)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>WiFi.scanNetworks();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;Scan<sp/>done&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;No<sp/>networks<sp/>found&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>page<sp/>+=<sp/>F(</highlight><highlight class="stringliteral">&quot;No<sp/>networks<sp/>found.<sp/>Refresh<sp/>to<sp/>scan<sp/>again.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sort<sp/>networks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indices[n];</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RSSI<sp/>SORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>old<sp/>sort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i<sp/>+<sp/>1;<sp/>j<sp/>&lt;<sp/>n;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WiFi.RSSI(indices[j])<sp/>&gt;<sp/>WiFi.RSSI(indices[i]))<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(indices[i],<sp/>indices[j]);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*std::sort(indices,<sp/>indices<sp/>+<sp/>n,<sp/>[](const<sp/>int<sp/>&amp;<sp/>a,<sp/>const<sp/>int<sp/>&amp;<sp/>b)<sp/>-&gt;<sp/>bool</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>WiFi.RSSI(a)<sp/>&gt;<sp/>WiFi.RSSI(b);</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>duplicates<sp/>(<sp/>must<sp/>be<sp/>RSSI<sp/>sorted<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1a94d25bd8d02bbf0236d75dfd8ee682d7" kindref="member">_removeDuplicateAPs</ref>)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>cssid;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indices[i]<sp/>==<sp/>-1)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cssid<sp/>=<sp/>WiFi.SSID(indices[i]);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i<sp/>+<sp/>1;<sp/>j<sp/>&lt;<sp/>n;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cssid<sp/>==<sp/>WiFi.SSID(indices[j]))<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(</highlight><highlight class="stringliteral">&quot;DUP<sp/>AP:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>WiFi.SSID(indices[j]));</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices[j]<sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>set<sp/>dup<sp/>aps<sp/>to<sp/>index<sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//display<sp/>networks<sp/>in<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indices[i]<sp/>==<sp/>-1)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>skip<sp/>dups</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(WiFi.SSID(indices[i]));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(WiFi.RSSI(indices[i]));</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quality<sp/>=<sp/><ref refid="class_wi_fi_manager_1ae71cfd6bd70ada2ca02e1d20b152d0e5" kindref="member">getRSSIasQuality</ref>(WiFi.RSSI(indices[i]));</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1ad1e130a5ce502767de764ea0cb1cecf6" kindref="member">_minimumQuality</ref><sp/>==<sp/>-1<sp/>||<sp/><ref refid="class_wi_fi_manager_1ad1e130a5ce502767de764ea0cb1cecf6" kindref="member">_minimumQuality</ref><sp/>&lt;<sp/>quality)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>item<sp/>=<sp/>FPSTR(HTTP_ITEM);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>rssiQ;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rssiQ<sp/>+=<sp/>quality;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item.replace(</highlight><highlight class="stringliteral">&quot;{v}&quot;</highlight><highlight class="normal">,<sp/>WiFi.SSID(indices[i]));</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item.replace(</highlight><highlight class="stringliteral">&quot;{r}&quot;</highlight><highlight class="normal">,<sp/>rssiQ);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WiFi.encryptionType(indices[i])<sp/>!=<sp/>ENC_TYPE_NONE)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item.replace(</highlight><highlight class="stringliteral">&quot;{i}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item.replace(</highlight><highlight class="stringliteral">&quot;{i}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DEBUG_WM(item);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page<sp/>+=<sp/>item;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(0);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;Skipping<sp/>due<sp/>to<sp/>quality&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>page<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&lt;br/&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_FORM_START);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>parLength[2];</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>extra<sp/>parameters<sp/>to<sp/>the<sp/>form</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_wi_fi_manager_1a22e803d23ae77cb611914445db17c9b6" kindref="member">_paramsCount</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1a355ce9bbaab94baffd1c83de9b166fea" kindref="member">_params</ref>[i]<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>pitem<sp/>=<sp/>FPSTR(HTTP_FORM_PARAM);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1a355ce9bbaab94baffd1c83de9b166fea" kindref="member">_params</ref>[i]-&gt;getID()<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pitem.replace(</highlight><highlight class="stringliteral">&quot;{i}&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_wi_fi_manager_1a355ce9bbaab94baffd1c83de9b166fea" kindref="member">_params</ref>[i]-&gt;getID());</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pitem.replace(</highlight><highlight class="stringliteral">&quot;{n}&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_wi_fi_manager_1a355ce9bbaab94baffd1c83de9b166fea" kindref="member">_params</ref>[i]-&gt;getID());</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pitem.replace(</highlight><highlight class="stringliteral">&quot;{p}&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_wi_fi_manager_1a355ce9bbaab94baffd1c83de9b166fea" kindref="member">_params</ref>[i]-&gt;getPlaceholder());</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(parLength,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_wi_fi_manager_1a355ce9bbaab94baffd1c83de9b166fea" kindref="member">_params</ref>[i]-&gt;getValueLength());</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pitem.replace(</highlight><highlight class="stringliteral">&quot;{l}&quot;</highlight><highlight class="normal">,<sp/>parLength);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pitem.replace(</highlight><highlight class="stringliteral">&quot;{v}&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_wi_fi_manager_1a355ce9bbaab94baffd1c83de9b166fea" kindref="member">_params</ref>[i]-&gt;getValue());</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pitem.replace(</highlight><highlight class="stringliteral">&quot;{c}&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_wi_fi_manager_1a355ce9bbaab94baffd1c83de9b166fea" kindref="member">_params</ref>[i]-&gt;getCustomHTML());</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pitem<sp/>=<sp/><ref refid="class_wi_fi_manager_1a355ce9bbaab94baffd1c83de9b166fea" kindref="member">_params</ref>[i]-&gt;<ref refid="class_wi_fi_manager_parameter_1a596273c189eb40107500cee3ad31b13b" kindref="member">getCustomHTML</ref>();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>page<sp/>+=<sp/>pitem;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1a355ce9bbaab94baffd1c83de9b166fea" kindref="member">_params</ref>[0]<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>page<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&lt;br/&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1ad90d356096742a43b4540117b92faff0" kindref="member">_sta_static_ip</ref>)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>item<sp/>=<sp/>FPSTR(HTTP_FORM_PARAM);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>item.replace(</highlight><highlight class="stringliteral">&quot;{i}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ip&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>item.replace(</highlight><highlight class="stringliteral">&quot;{n}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ip&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>item.replace(</highlight><highlight class="stringliteral">&quot;{p}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Static<sp/>IP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>item.replace(</highlight><highlight class="stringliteral">&quot;{l}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;15&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>item.replace(</highlight><highlight class="stringliteral">&quot;{v}&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_wi_fi_manager_1ad90d356096742a43b4540117b92faff0" kindref="member">_sta_static_ip</ref>.toString());</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>page<sp/>+=<sp/>item;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>item<sp/>=<sp/>FPSTR(HTTP_FORM_PARAM);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>item.replace(</highlight><highlight class="stringliteral">&quot;{i}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>item.replace(</highlight><highlight class="stringliteral">&quot;{n}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>item.replace(</highlight><highlight class="stringliteral">&quot;{p}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Static<sp/>Gateway&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>item.replace(</highlight><highlight class="stringliteral">&quot;{l}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;15&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>item.replace(</highlight><highlight class="stringliteral">&quot;{v}&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_wi_fi_manager_1a36648ca4819dc0feedaf9e1987d56d96" kindref="member">_sta_static_gw</ref>.toString());</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>page<sp/>+=<sp/>item;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>item<sp/>=<sp/>FPSTR(HTTP_FORM_PARAM);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>item.replace(</highlight><highlight class="stringliteral">&quot;{i}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sn&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>item.replace(</highlight><highlight class="stringliteral">&quot;{n}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sn&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>item.replace(</highlight><highlight class="stringliteral">&quot;{p}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Subnet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>item.replace(</highlight><highlight class="stringliteral">&quot;{l}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;15&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>item.replace(</highlight><highlight class="stringliteral">&quot;{v}&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_wi_fi_manager_1a3fd337255bce688189f9d450cc0ca3a3" kindref="member">_sta_static_sn</ref>.toString());</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>page<sp/>+=<sp/>item;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>page<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&lt;br/&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_FORM_END);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_SCAN_LINK);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_END);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;send(200,<sp/></highlight><highlight class="stringliteral">&quot;text/html&quot;</highlight><highlight class="normal">,<sp/>page);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;Sent<sp/>config<sp/>page&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="540" refid="class_wi_fi_manager_1a2a8c2b60aa86dfdeab8a1a90f7122dc7" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a2a8c2b60aa86dfdeab8a1a90f7122dc7" kindref="member">WiFiManager::handleWifiSave</ref>()<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;WiFi<sp/>save&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//SAVE/connect<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a43fdc9234ac52d98aeea31148f96526d" kindref="member">_ssid</ref><sp/>=<sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;arg(</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">).c_str();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a7486c2c0b67884ea872a4fe56d3450b2" kindref="member">_pass</ref><sp/>=<sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;arg(</highlight><highlight class="stringliteral">&quot;p&quot;</highlight><highlight class="normal">).c_str();</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_wi_fi_manager_1a22e803d23ae77cb611914445db17c9b6" kindref="member">_paramsCount</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1a355ce9bbaab94baffd1c83de9b166fea" kindref="member">_params</ref>[i]<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//read<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>value<sp/>=<sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;arg(<ref refid="class_wi_fi_manager_1a355ce9bbaab94baffd1c83de9b166fea" kindref="member">_params</ref>[i]-&gt;getID()).c_str();</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//store<sp/>it<sp/>in<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>value.toCharArray(<ref refid="class_wi_fi_manager_1a355ce9bbaab94baffd1c83de9b166fea" kindref="member">_params</ref>[i]-&gt;_value,<sp/><ref refid="class_wi_fi_manager_1a355ce9bbaab94baffd1c83de9b166fea" kindref="member">_params</ref>[i]-&gt;_length);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;Parameter&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(<ref refid="class_wi_fi_manager_1a355ce9bbaab94baffd1c83de9b166fea" kindref="member">_params</ref>[i]-&gt;getID());</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(value);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;arg(</highlight><highlight class="stringliteral">&quot;ip&quot;</highlight><highlight class="normal">)<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;static<sp/>ip&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(<ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;arg(</highlight><highlight class="stringliteral">&quot;ip&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_sta_static_ip.fromString(server-&gt;arg(&quot;ip&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>ip<sp/>=<sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;arg(</highlight><highlight class="stringliteral">&quot;ip&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1a6a94f08eb43e0871932556a4ccfa11b7" kindref="member">optionalIPFromString</ref>(&amp;<ref refid="class_wi_fi_manager_1ad90d356096742a43b4540117b92faff0" kindref="member">_sta_static_ip</ref>,<sp/>ip.c_str());</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;arg(</highlight><highlight class="stringliteral">&quot;gw&quot;</highlight><highlight class="normal">)<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;static<sp/>gateway&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(<ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;arg(</highlight><highlight class="stringliteral">&quot;gw&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>gw<sp/>=<sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;arg(</highlight><highlight class="stringliteral">&quot;gw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1a6a94f08eb43e0871932556a4ccfa11b7" kindref="member">optionalIPFromString</ref>(&amp;<ref refid="class_wi_fi_manager_1a36648ca4819dc0feedaf9e1987d56d96" kindref="member">_sta_static_gw</ref>,<sp/>gw.c_str());</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;arg(</highlight><highlight class="stringliteral">&quot;sn&quot;</highlight><highlight class="normal">)<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;static<sp/>netmask&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(<ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;arg(</highlight><highlight class="stringliteral">&quot;sn&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>sn<sp/>=<sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;arg(</highlight><highlight class="stringliteral">&quot;sn&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1a6a94f08eb43e0871932556a4ccfa11b7" kindref="member">optionalIPFromString</ref>(&amp;<ref refid="class_wi_fi_manager_1a3fd337255bce688189f9d450cc0ca3a3" kindref="member">_sta_static_sn</ref>,<sp/>sn.c_str());</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>String<sp/>page<sp/>=<sp/>FPSTR(HTTP_HEAD);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>page.replace(</highlight><highlight class="stringliteral">&quot;{v}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Credentials<sp/>Saved&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_SCRIPT);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_STYLE);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/><ref refid="class_wi_fi_manager_1a8860012564a62209d750c50e56319192" kindref="member">_customHeadElement</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_HEAD_END);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_SAVED);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_END);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;send(200,<sp/></highlight><highlight class="stringliteral">&quot;text/html&quot;</highlight><highlight class="normal">,<sp/>page);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;Sent<sp/>wifi<sp/>save<sp/>page&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a7be7e74e93283eea089af659184dd906" kindref="member">connect</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//signal<sp/>ready<sp/>to<sp/>connect/reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="598" refid="class_wi_fi_manager_1ac35e46661f8a209d84bba62d9aa43a35" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1ac35e46661f8a209d84bba62d9aa43a35" kindref="member">WiFiManager::handleInfo</ref>()<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>String<sp/>page<sp/>=<sp/>FPSTR(HTTP_HEAD);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>page.replace(</highlight><highlight class="stringliteral">&quot;{v}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_SCRIPT);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_STYLE);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/><ref refid="class_wi_fi_manager_1a8860012564a62209d750c50e56319192" kindref="member">_customHeadElement</ref>;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_HEAD_END);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>F(</highlight><highlight class="stringliteral">&quot;&lt;dl&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>F(</highlight><highlight class="stringliteral">&quot;&lt;dt&gt;Chip<sp/>ID&lt;/dt&gt;&lt;dd&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>ESP.getChipId();</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>F(</highlight><highlight class="stringliteral">&quot;&lt;/dd&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>F(</highlight><highlight class="stringliteral">&quot;&lt;dt&gt;Flash<sp/>Chip<sp/>ID&lt;/dt&gt;&lt;dd&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>ESP.getFlashChipId();</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>F(</highlight><highlight class="stringliteral">&quot;&lt;/dd&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>F(</highlight><highlight class="stringliteral">&quot;&lt;dt&gt;IDE<sp/>Flash<sp/>Size&lt;/dt&gt;&lt;dd&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>ESP.getFlashChipSize();</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>F(</highlight><highlight class="stringliteral">&quot;<sp/>bytes&lt;/dd&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>F(</highlight><highlight class="stringliteral">&quot;&lt;dt&gt;Real<sp/>Flash<sp/>Size&lt;/dt&gt;&lt;dd&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>ESP.getFlashChipRealSize();</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>F(</highlight><highlight class="stringliteral">&quot;<sp/>bytes&lt;/dd&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>F(</highlight><highlight class="stringliteral">&quot;&lt;dt&gt;Soft<sp/>AP<sp/>IP&lt;/dt&gt;&lt;dd&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>WiFi.softAPIP().toString();</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>F(</highlight><highlight class="stringliteral">&quot;&lt;/dd&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>F(</highlight><highlight class="stringliteral">&quot;&lt;dt&gt;Soft<sp/>AP<sp/>MAC&lt;/dt&gt;&lt;dd&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>WiFi.softAPmacAddress();</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>F(</highlight><highlight class="stringliteral">&quot;&lt;/dd&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>F(</highlight><highlight class="stringliteral">&quot;&lt;dt&gt;Station<sp/>MAC&lt;/dt&gt;&lt;dd&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>WiFi.macAddress();</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>F(</highlight><highlight class="stringliteral">&quot;&lt;/dd&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>F(</highlight><highlight class="stringliteral">&quot;&lt;/dl&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_END);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;send(200,<sp/></highlight><highlight class="stringliteral">&quot;text/html&quot;</highlight><highlight class="normal">,<sp/>page);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;Sent<sp/>info<sp/>page&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="638" refid="class_wi_fi_manager_1a94fb1a8fcfbd0d02714c69138bf72f9c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a94fb1a8fcfbd0d02714c69138bf72f9c" kindref="member">WiFiManager::handleReset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;Reset&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>String<sp/>page<sp/>=<sp/>FPSTR(HTTP_HEAD);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>page.replace(</highlight><highlight class="stringliteral">&quot;{v}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_SCRIPT);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_STYLE);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/><ref refid="class_wi_fi_manager_1a8860012564a62209d750c50e56319192" kindref="member">_customHeadElement</ref>;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_HEAD_END);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>F(</highlight><highlight class="stringliteral">&quot;Module<sp/>will<sp/>reset<sp/>in<sp/>a<sp/>few<sp/>seconds.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>page<sp/>+=<sp/>FPSTR(HTTP_END);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;send(200,<sp/></highlight><highlight class="stringliteral">&quot;text/html&quot;</highlight><highlight class="normal">,<sp/>page);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;Sent<sp/>reset<sp/>page&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>delay(5000);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;reset<sp/>ESP<sp/>and<sp/>Wifi<sp/>configuration<sp/>file&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/></highlight><highlight class="comment">//create<sp/>json<sp/>wifi<sp/>count<sp/>=<sp/>0<sp/>,timeout=300,nomad=0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufferSize<sp/>=<sp/>JSON_OBJECT_SIZE(3)<sp/>+<sp/>40;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/>DynamicJsonBuffer<sp/>jsonBuffer(bufferSize);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>json<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;wifiCount\&quot;:0,\&quot;timeOut\&quot;:300,\&quot;nomad\&quot;:0}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/>JsonObject&amp;<sp/>root<sp/>=<sp/>jsonBuffer.parseObject(json);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/></highlight><highlight class="comment">//open<sp/>wifi<sp/>file<sp/>in<sp/>w<sp/>:<sp/>delete<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/>File<sp/>configFile<sp/>=<sp/>SPIFFS.open(</highlight><highlight class="stringliteral">&quot;/wifiConfig.json&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/></highlight><highlight class="comment">//write<sp/>json<sp/>in<sp/>file<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/>root.printTo(configFile);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/></highlight><highlight class="comment">//close<sp/>file<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/>configFile.close();</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/>delay(500);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/>ESP.reset();</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/>delay(2000);</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="676" refid="class_wi_fi_manager_1a9e802fa4ca834a622f058a7176f47806" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a9e802fa4ca834a622f058a7176f47806" kindref="member">WiFiManager::handleFileRead</ref>(String<sp/>path)<sp/></highlight></codeline>
<codeline lineno="677"><highlight class="normal">{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;handleFileRead&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;path<sp/>:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(path);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(path.endsWith(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;index.htm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;path<sp/>modified<sp/>:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(path);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>contentType<sp/>=<sp/><ref refid="class_wi_fi_manager_1a40f123fd290c3e331c9785d19a88f3b8" kindref="member">getContentType</ref>(path);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;content<sp/>Type<sp/>:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(contentType);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>pathWithGz<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.gz&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SPIFFS.exists(pathWithGz)<sp/>||<sp/>SPIFFS.exists(path))</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;file<sp/>found<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SPIFFS.exists(pathWithGz))</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;.gz&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>File<sp/>file<sp/>=<sp/>SPIFFS.open(path,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//size_t<sp/>sent<sp/>=<sp/>server-&gt;streamFile(file,<sp/>contentType);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[1024];</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>siz<sp/>=<sp/>file.size();</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(siz<sp/>&gt;<sp/>0)<sp/></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>min((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf)<sp/>-<sp/>1),<sp/>siz);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file.read((uint8_t<sp/>*)buf,<sp/>len);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;client().write((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)buf,<sp/>len);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>siz<sp/>-=<sp/>len;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if<sp/>(sent<sp/>!=<sp/>file.size())<sp/></highlight></codeline>
<codeline lineno="718"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_WM(F(&quot;Sent<sp/>less<sp/>data<sp/>than<sp/>expected!&quot;));</highlight></codeline>
<codeline lineno="720"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file.close();</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;File<sp/>not<sp/>found<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="comment">//removed<sp/>as<sp/>mentioned<sp/>here<sp/>https://github.com/tzapu/WiFiManager/issues/114</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="comment">/*void<sp/>WiFiManager::handle204()<sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="comment"><sp/><sp/>DEBUG_WM(F(&quot;204<sp/>No<sp/>Response&quot;));</highlight></codeline>
<codeline lineno="740"><highlight class="comment"><sp/><sp/>server-&gt;sendHeader(&quot;Cache-Control&quot;,<sp/>&quot;no-cache,<sp/>no-store,<sp/>must-revalidate&quot;);</highlight></codeline>
<codeline lineno="741"><highlight class="comment"><sp/><sp/>server-&gt;sendHeader(&quot;Pragma&quot;,<sp/>&quot;no-cache&quot;);</highlight></codeline>
<codeline lineno="742"><highlight class="comment"><sp/><sp/>server-&gt;sendHeader(&quot;Expires&quot;,<sp/>&quot;-1&quot;);</highlight></codeline>
<codeline lineno="743"><highlight class="comment"><sp/><sp/>server-&gt;send<sp/>(<sp/>204,<sp/>&quot;text/plain&quot;,<sp/>&quot;&quot;);</highlight></codeline>
<codeline lineno="744"><highlight class="comment">}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746" refid="class_wi_fi_manager_1a7d01f7de3e4b76acdabffac79fa3d0ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a7d01f7de3e4b76acdabffac79fa3d0ab" kindref="member">WiFiManager::handleNotFound</ref>()<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1a4ef4298deb224212e5242c456669a973" kindref="member">captivePortal</ref>())<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>String<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>Not<sp/>Found\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>message<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;URI:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>message<sp/>+=<sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;uri();</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>message<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nMethod:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>message<sp/>+=<sp/>(<sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;method()<sp/>==<sp/>HTTP_GET<sp/>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;GET&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;POST&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>message<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\nArguments:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>message<sp/>+=<sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;args();</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>message<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;args();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>message<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;argName<sp/>(<sp/>i<sp/>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;arg<sp/>(<sp/>i<sp/>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;sendHeader(</highlight><highlight class="stringliteral">&quot;Cache-Control&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;no-cache,<sp/>no-store,<sp/>must-revalidate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;sendHeader(</highlight><highlight class="stringliteral">&quot;Pragma&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;no-cache&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;sendHeader(</highlight><highlight class="stringliteral">&quot;Expires&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;send<sp/>(<sp/>404,<sp/></highlight><highlight class="stringliteral">&quot;text/plain&quot;</highlight><highlight class="normal">,<sp/>message<sp/>);</highlight></codeline>
<codeline lineno="766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="770" refid="class_wi_fi_manager_1a4ef4298deb224212e5242c456669a973" refkind="member"><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a4ef4298deb224212e5242c456669a973" kindref="member">WiFiManager::captivePortal</ref>()<sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_wi_fi_manager_1a9c78a8774f746ec22a99d03a53baa607" kindref="member">isIp</ref>(<ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;hostHeader())<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">DEBUG_WM</ref>(F(</highlight><highlight class="stringliteral">&quot;Request<sp/>redirected<sp/>to<sp/>captive<sp/>portal&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;sendHeader(</highlight><highlight class="stringliteral">&quot;Location&quot;</highlight><highlight class="normal">,<sp/>String(</highlight><highlight class="stringliteral">&quot;http://&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="class_wi_fi_manager_1a8dfd64cefecbdf26242b16eca335c20b" kindref="member">toStringIp</ref>(<ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;client().localIP()),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;send<sp/>(<sp/>302,<sp/></highlight><highlight class="stringliteral">&quot;text/plain&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>content<sp/>inhibits<sp/>Content-length<sp/>header<sp/>so<sp/>we<sp/>have<sp/>to<sp/>close<sp/>the<sp/>socket<sp/>ourselves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;client().stop();<sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>is<sp/>needed<sp/>because<sp/>we<sp/>sent<sp/>no<sp/>content<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="comment">//start<sp/>up<sp/>config<sp/>portal<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782" refid="class_wi_fi_manager_1a353ab556f96020ad7a08e9a91cea8bea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a353ab556f96020ad7a08e9a91cea8bea" kindref="member">WiFiManager::setAPCallback</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*func)(<ref refid="class_wi_fi_manager" kindref="compound">WiFiManager</ref>*<sp/>myWiFiManager)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1ad166247d94aef10a3a8aa34da1351b27" kindref="member">_apcallback</ref><sp/>=<sp/>func;</highlight></codeline>
<codeline lineno="784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="comment">//start<sp/>up<sp/>save<sp/>config<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787" refid="class_wi_fi_manager_1a3666ca145de5e28d943db54fcb204e65" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a3666ca145de5e28d943db54fcb204e65" kindref="member">WiFiManager::setSaveConfigCallback</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*func)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a9a316060184788e33e71d88101cb2e0d" kindref="member">_savecallback</ref><sp/>=<sp/>func;</highlight></codeline>
<codeline lineno="789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="comment">//sets<sp/>a<sp/>custom<sp/>element<sp/>to<sp/>add<sp/>to<sp/>head,<sp/>like<sp/>a<sp/>new<sp/>style<sp/>tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792" refid="class_wi_fi_manager_1a85570bcfe03da48c4be75b8e4302c4db" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a85570bcfe03da48c4be75b8e4302c4db" kindref="member">WiFiManager::setCustomHeadElement</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>element)<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a8860012564a62209d750c50e56319192" kindref="member">_customHeadElement</ref><sp/>=<sp/>element;</highlight></codeline>
<codeline lineno="794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="comment">//if<sp/>this<sp/>is<sp/>true,<sp/>remove<sp/>duplicated<sp/>Access<sp/>Points<sp/>-<sp/>defaut<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797" refid="class_wi_fi_manager_1a4dd1dbf4f22900f226a3897b88155212" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a4dd1dbf4f22900f226a3897b88155212" kindref="member">WiFiManager::setRemoveDuplicateAPs</ref>(</highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>removeDuplicates)<sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><ref refid="class_wi_fi_manager_1a94d25bd8d02bbf0236d75dfd8ee682d7" kindref="member">_removeDuplicateAPs</ref><sp/>=<sp/>removeDuplicates;</highlight></codeline>
<codeline lineno="799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Generic&gt;</highlight></codeline>
<codeline lineno="804" refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1ae5f595c670ccbcf9a191baf50f5c7c26" kindref="member">WiFiManager::DEBUG_WM</ref>(Generic<sp/>text)<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_wi_fi_manager_1ac0f345f4a4c8bc38a49c8f87931b8cd4" kindref="member">_debug</ref>)<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;*WM:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(text);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811" refid="class_wi_fi_manager_1ae71cfd6bd70ada2ca02e1d20b152d0e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1ae71cfd6bd70ada2ca02e1d20b152d0e5" kindref="member">WiFiManager::getRSSIasQuality</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RSSI)<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quality<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RSSI<sp/>&lt;=<sp/>-100)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>quality<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RSSI<sp/>&gt;=<sp/>-50)<sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>quality<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>quality<sp/>=<sp/>2<sp/>*<sp/>(RSSI<sp/>+<sp/>100);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>quality;</highlight></codeline>
<codeline lineno="822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="825" refid="class_wi_fi_manager_1a9c78a8774f746ec22a99d03a53baa607" refkind="member"><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="class_wi_fi_manager_1a9c78a8774f746ec22a99d03a53baa607" kindref="member">WiFiManager::isIp</ref>(String<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>str.length();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>str.charAt(i);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>(c<sp/>&lt;<sp/>&apos;0&apos;<sp/>||<sp/>c<sp/>&gt;<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="833"><highlight class="normal">}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="836" refid="class_wi_fi_manager_1a8dfd64cefecbdf26242b16eca335c20b" refkind="member"><highlight class="normal">String<sp/><ref refid="class_wi_fi_manager_1a8dfd64cefecbdf26242b16eca335c20b" kindref="member">WiFiManager::toStringIp</ref>(IPAddress<sp/>ip)<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>String<sp/>res<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>+=<sp/>String((ip<sp/>&gt;&gt;<sp/>(8<sp/>*<sp/>i))<sp/>&amp;<sp/>0xFF)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/>res<sp/>+=<sp/>String(((ip<sp/>&gt;&gt;<sp/>8<sp/>*<sp/>3))<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845" refid="class_wi_fi_manager_1a40f123fd290c3e331c9785d19a88f3b8" refkind="member"><highlight class="normal">String<sp/><ref refid="class_wi_fi_manager_1a40f123fd290c3e331c9785d19a88f3b8" kindref="member">WiFiManager::getContentType</ref>(String<sp/>filename){</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_wi_fi_manager_1a509523a01c0395cf0dc235b074f2a5ea" kindref="member">server</ref>-&gt;hasArg(</highlight><highlight class="stringliteral">&quot;download&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;application/octet-stream&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filename.endsWith(</highlight><highlight class="stringliteral">&quot;.htm&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;text/html&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filename.endsWith(</highlight><highlight class="stringliteral">&quot;.html&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;text/html&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filename.endsWith(</highlight><highlight class="stringliteral">&quot;.css&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;text/css&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filename.endsWith(</highlight><highlight class="stringliteral">&quot;.js&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;application/javascript&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filename.endsWith(</highlight><highlight class="stringliteral">&quot;.png&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;image/png&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filename.endsWith(</highlight><highlight class="stringliteral">&quot;.gif&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;image/gif&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filename.endsWith(</highlight><highlight class="stringliteral">&quot;.jpg&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;image/jpeg&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filename.endsWith(</highlight><highlight class="stringliteral">&quot;.ico&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;image/x-icon&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filename.endsWith(</highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;text/xml&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filename.endsWith(</highlight><highlight class="stringliteral">&quot;.pdf&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;application/x-pdf&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filename.endsWith(</highlight><highlight class="stringliteral">&quot;.zip&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;application/x-zip&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filename.endsWith(</highlight><highlight class="stringliteral">&quot;.gz&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;application/x-gzip&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filename.endsWith(</highlight><highlight class="stringliteral">&quot;.csv&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;text/csv&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;text/plain&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="861"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/internals/WiFiManagerReadFileButton.cpp"/>
  </compounddef>
</doxygen>
