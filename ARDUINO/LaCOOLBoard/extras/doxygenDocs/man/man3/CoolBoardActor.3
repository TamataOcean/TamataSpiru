.TH "CoolBoardActor" 3 "Tue Sep 19 2017" "CoolBoardAPI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CoolBoardActor \- This class manages the \fBCoolBoardActor\fP\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <CoolBoardActor\&.h>\fP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBstate\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBbegin\fP ()"
.br
.ti -1c
.RI "void \fBwrite\fP (bool action)"
.br
.ti -1c
.RI "String \fBdoAction\fP (const char *data)"
.br
.ti -1c
.RI "void \fBnormalAction\fP (float measurment)"
.br
.ti -1c
.RI "void \fBinvertedAction\fP (float measurment)"
.br
.ti -1c
.RI "void \fBtemporalActionOff\fP ()"
.br
.ti -1c
.RI "void \fBtemporalActionOn\fP ()"
.br
.ti -1c
.RI "void \fBmixedTemporalActionOff\fP (float measurment)"
.br
.ti -1c
.RI "void \fBmixedTemporalActionOn\fP (float measurment)"
.br
.ti -1c
.RI "void \fBhourAction\fP (int hour)"
.br
.ti -1c
.RI "void \fBmixedHourAction\fP (int hour, float measurment)"
.br
.ti -1c
.RI "void \fBminuteAction\fP (int minute)"
.br
.ti -1c
.RI "void \fBmixedMinuteAction\fP (int minute, float measurment)"
.br
.ti -1c
.RI "void \fBhourMinuteAction\fP (int hour, int minute)"
.br
.ti -1c
.RI "void \fBmixedHourMinuteAction\fP (int hour, int minute, float measurment)"
.br
.ti -1c
.RI "bool \fBconfig\fP ()"
.br
.ti -1c
.RI "void \fBprintConf\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "struct \fBCoolBoardActor::state\fP \fBactor\fP"
.br
.ti -1c
.RI "const int \fBpin\fP = 15"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class manages the \fBCoolBoardActor\fP\&. 
.PP
Definition at line 44 of file CoolBoardActor\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "void CoolBoardActor::begin ()"
\fBCoolBoardActor::begin()\fP: This method is provided to initialise the \fBCoolBoardActor\fP pin 
.PP
Definition at line 48 of file CoolBoardActor\&.cpp\&.
.SS "bool CoolBoardActor::config ()"
\fBCoolBoardActor::config()\fP: This method is provided to configure the \fBCoolBoardActor\fP with a configuration file
.PP
\fBReturns:\fP
.RS 4
true if successful,false otherwise 
.RE
.PP

.PP
Definition at line 281 of file CoolBoardActor\&.cpp\&.
.SS "String CoolBoardActor::doAction (const char * data)"
CoolBoardActor::doAction(sensor data ): This method is provided to automate the \fBCoolBoardActor\fP\&.
.PP
The result action is the result of checking the different flags of the actor (actif , temporal ,inverted, primaryType and secondaryType ) and the corresponding call to the appropriate helping method
.PP
\fBReturns:\fP
.RS 4
a string of the actor's state 
.RE
.PP

.PP
Definition at line 103 of file CoolBoardActor\&.cpp\&.
.SS "void CoolBoardActor::hourAction (int hour)"
CoolBoardActor::hourAction( current hour ): This method is provided to handle hour actors\&. it changes the action according to:
.PP
hour >= hourLow : deactivate the actor hour >= hourHigh : activate the actor 
.PP
Definition at line 945 of file CoolBoardActor\&.cpp\&.
.SS "void CoolBoardActor::hourMinuteAction (int hour, int minute)"
CoolBoardActor::minteAction( current hour,current minute ): This method is provided to handle hour minute actors\&. it changes the action according to:
.PP
hour == hourLow : minute >= minuteLow : deactivate the actor
.PP
hour > hourLow : deactivate the actor
.PP
hour == hourHigh : minute >= minteHigh : activate the actor
.PP
hour > hourHigh : activate the actor 
.PP
Definition at line 1289 of file CoolBoardActor\&.cpp\&.
.SS "void CoolBoardActor::invertedAction (float measurment)"
CoolBoardActor::invertedAction( measured value): This method is provided to handle inverted actors\&. it changes the action according to wether the measured value is: 
.PP
.RS 4
rangeHigh (activate actor) 
.RE
.PP
< rangeLow ( deactivate actor ) 
.PP
Definition at line 612 of file CoolBoardActor\&.cpp\&.
.SS "void CoolBoardActor::minuteAction (int minute)"
CoolBoardActor::minteAction( current minute ): This method is provided to handle minute actors\&. it changes the action according to:
.PP
minute >= minuteLow : deactivate the actor minute >= minuteHigh : activate the actor 
.PP
Definition at line 1113 of file CoolBoardActor\&.cpp\&.
.SS "void CoolBoardActor::mixedHourAction (int hour, float measurment)"
CoolBoardActor::mixedHourAction( current hour, measured value ): This method is provided to handle mixed hour actors\&. it changes the action according to :
.PP
hour >= hourLow : -measuredValue >= rangeHigh : deactivate actor -measured < rangeHigh : activate actor
.PP
hour >= hourHigh : -measuredValue < rangeLow : activate actor -measuredValue >=rangeLow : activate actor 
.PP
Definition at line 1006 of file CoolBoardActor\&.cpp\&.
.SS "void CoolBoardActor::mixedHourMinuteAction (int hour, int minute, float measurment)"
CoolBoardActor::minteAction( current hour,current minute , measured Value ): This method is provided to handle hour minute actors\&. it changes the action according to:
.PP
hour == hourLow : minute >= minuteLow : measuredValue >= rangeHigh : deactivate actor measuredValue < rangeHigh : activate actor
.PP
hour > hourLow : measuredValue >= rangeHigh : deactivate actor measuredValue < rangeHigh : activate actor
.PP
hour == hourHigh : minute >= minteHigh : measuredValue >= rangeLow : deactivate actor measuredValue < rangeLow : activate actor
.PP
hour > hourHigh : measuredValue >= rangeLow : deactivate actor measuredValue < rangeLow : activate actor 
.PP
Definition at line 1394 of file CoolBoardActor\&.cpp\&.
.SS "void CoolBoardActor::mixedMinuteAction (int minute, float measurment)"
CoolBoardActor::mixedMinuteAction( current minute, measured value ): This method is provided to handle mixed minute actors\&. it changes the action according to :
.PP
minute >= minuteLow : -measuredValue >= rangeHigh : deactivate actor -measured < rangeHigh : activate actor
.PP
minute >= minuteHigh : -measuredValue < rangeLow : activate actor -measuredValue >=rangeLow : activate actor 
.PP
Definition at line 1173 of file CoolBoardActor\&.cpp\&.
.SS "void CoolBoardActor::mixedTemporalActionOff (float measurment)"
CoolBoardActor::mixedTemporalActionOff( measured value ): This method is provided to handle mixed temporal actors\&. it changes the action according to:
.PP
currentTime - startTime >= timeHigh : measured value >= rangeHigh : deactivate actor measured value < rangeHigh : activate actor 
.PP
Definition at line 718 of file CoolBoardActor\&.cpp\&.
.SS "void CoolBoardActor::mixedTemporalActionOn (float measurment)"
CoolBoardActor::mixedTemporalActionOn( measured value ): This method is provided to handle mixed temporal actors\&. it changes the action according to :
.PP
currentTime - stopTime > timeLow : measured value >= rangeLow : deactivate actor measured value < rangeLow : activate actor 
.PP
Definition at line 856 of file CoolBoardActor\&.cpp\&.
.SS "void CoolBoardActor::normalAction (float measurment)"
CoolBoardActor::normalAction( measured value): This method is provided to handle normal actors\&. it changes the action according to wether the measured value is: > rangeHigh ( deactivate actor) or < rangeLow (activate actor ) 
.PP
Definition at line 555 of file CoolBoardActor\&.cpp\&.
.SS "void CoolBoardActor::printConf ()"
\fBCoolBoardActor::printConf()\fP: This method is provided to print the configuration to the Serial Monitor 
.PP
Definition at line 481 of file CoolBoardActor\&.cpp\&.
.SS "void CoolBoardActor::temporalActionOff ()"
\fBCoolBoardActor::temporalActionOff( )\fP: This method is provided to handle temporal actors\&. it changes the action according to:
.PP
currentTime - startTime > timeHigh : deactivate actor 
.PP
Definition at line 667 of file CoolBoardActor\&.cpp\&.
.SS "void CoolBoardActor::temporalActionOn ()"
\fBCoolBoardActor::temporalActionOn( )\fP: This method is provided to handle temporal actors\&. it changes the action according to :
.PP
currentTime - stopTime > timeLow : activate actor 
.PP
Definition at line 804 of file CoolBoardActor\&.cpp\&.
.SS "void CoolBoardActor::write (bool action)"
CoolBoardActor::write(action): This method is provided to write the given action to the \fBCoolBoardActor\fP\&. 
.PP
Definition at line 71 of file CoolBoardActor\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "struct \fBCoolBoardActor::state\fP CoolBoardActor::actor\fC [private]\fP"

.SS "const int CoolBoardActor::pin = 15\fC [private]\fP"
pin Number value the only available pin that can be used to run a small actor is pin 15 
.PP
Definition at line 205 of file CoolBoardActor\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for CoolBoardAPI from the source code\&.
