class NDIR_I2C
!!!144005.cpp!!!	NDIR_I2C(in i2c_addr : uint8_t)
    if (i2c_addr >= 8 && i2c_addr < 120) {
        NDIR_I2C::i2c_addr = i2c_addr;
    } else {
        NDIR_I2C::i2c_addr = 0;
    }
!!!144133.cpp!!!	begin() : uint8_t
    if (i2c_addr) {
	WIRE.begin(2,14);
        write_register(IOCONTROL, 0x08);

        if (write_register(FCR, 0x07)) {
            if (write_register(LCR, 0x83)) {
                if (write_register(DLL, 0x60)) {
                    if (write_register(DLH, 0x00)) {
                        if (write_register(LCR, 0x03)) {
                            if (measure()) {
                                return true;
                            }
                        }
                    }
                }
            }
        }
    }

    return false;
!!!144261.cpp!!!	measure() : uint8_t
    uint8_t buf[9];

    if (i2c_addr) {
        if (write_register(FCR, 0x07)) {
            delayMicroseconds(1);

            if (send(cmd_measure, 9)) {
                if (receive(buf, 9)) {
                    if (parse(buf)) {
                        return true;
                    }
                }
            }
        }
    }

    return false;
!!!144389.cpp!!!	send(inout pdata : uint8_t, in n : uint8_t) : uint8_t
    uint8_t result;

    if (read_register(TXLVL, &result)) {
        if (result >= n) {
            if (write_register(THR, pdata, n)) {
                return true;
            }
        }
    }

    return false;
!!!144517.cpp!!!	receive(inout pbuf : uint8_t, in n : uint8_t) : uint8_t
    uint8_t  i;
    uint8_t  rx_level;
    uint32_t start = millis();

    while (n) {
        if (read_register(RXLVL, &rx_level)) {
            if (rx_level > n) {
                rx_level = n;
            }

            if (rx_level) {
                WIRE.beginTransmission(i2c_addr);
                WIRE.write(RHR << 3);

                if (WIRE.endTransmission() != 0) {
                    return false;
                }//delay(10);

                if (rx_level == WIRE.requestFrom(i2c_addr, rx_level)) {
                    for (i=0; i<rx_level; i++) {
                       *pbuf = WIRE.read();
                        pbuf++;
                        n--;
                    }
                } else {
                    return false;
                }
            }
        } else {
            return false;
        }

        if (millis() - start > RECEIVE_TIMEOUT) {
            return false;
        }
    }

    return true;
!!!144645.cpp!!!	read_register(in reg_addr : uint8_t, inout pval : uint8_t) : uint8_t
    uint8_t result;

    WIRE.beginTransmission(i2c_addr);
    WIRE.write(reg_addr << 3);

    if (WIRE.endTransmission() != 0) {
        return false;
    }

    if (WIRE.requestFrom(i2c_addr, (uint8_t)1) != 1) {
        return false;
    }

   *pval = WIRE.read();
    return true;
!!!144773.cpp!!!	write_register(in reg_addr : uint8_t, inout pdata : uint8_t, in n : uint8_t) : uint8_t
    uint8_t result;

    WIRE.beginTransmission(i2c_addr);
    WIRE.write(reg_addr << 3);

    while (n--) {
        WIRE.write(*pdata);
        pdata++;
    }

    if (WIRE.endTransmission() != 0) {
        return false;
    } else {
        return true;
    }
!!!144901.cpp!!!	write_register(in reg_addr : uint8_t, in val : uint8_t) : uint8_t
    return write_register(reg_addr, &val, 1);
!!!145029.cpp!!!	parse(inout pbuf : uint8_t) : uint8_t
    uint8_t i;
    uint8_t checksum = 0;

    for (i=0; i<9; i++) {
        checksum += pbuf[i];
    }

    if (pbuf[0] == 0xFF && pbuf[1] == 0x9C && checksum == 0xFF) {
        ppm = (uint32_t)pbuf[2] << 24 | (uint32_t)pbuf[3] << 16 | (uint32_t)pbuf[4] << 8 | pbuf[5];
        return true;
    } else {
        return false;
    }
